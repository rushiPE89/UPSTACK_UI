{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/lab/UpdateLabResult.js\";\nimport { Button, Container, FormControl, Grid, makeStyles, React, TextField, Typography, useEffect, useHistory, useState } from \"../component\";\nimport { doUpdateLabResult } from \"./labDispatcher\";\nimport { appNotification } from \"../shared/notification/app-notification\";\nimport { useLocation, useRouteMatch } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { doGetTestRequestByID } from \"../testrequests/testRequestDispatcher\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TestRequestDetail from \"../testrequests/TestRequestDetail\";\nimport { errorHandler } from \"../shared/common-helpers\";\nconst useStyles = makeStyles(theme => ({\n  paperWhite: {\n    margin: \"0 auto\",\n    padding: \"20px 20px 20px 20px\",\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    backgroundColor: 'white'\n  },\n  mt40: {\n    marginTop: 40\n  },\n  w100: {\n    width: '100%'\n  },\n  select100Form: {\n    width: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  formContainer: {\n    padding: \"50 50 50 50\"\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction UpdateLabResult() {\n  const classes = useStyles();\n  const history = useHistory();\n  let location = useLocation();\n  let {\n    params\n  } = useRouteMatch(\"/update-lab-report/:id\");\n  const dispatch = useDispatch();\n  const {\n    id\n  } = params;\n  const [testRequest, setTestRequest] = useState(null);\n  const [bloodPressure, setBloodPressure] = useState('102');\n  const [comments, setComments] = useState('Should be left');\n  const [heartBeat, setHeartBeat] = useState('97');\n  const [oxygenLevel, setOxygenLevel] = useState('95');\n  const [temperature, setTemperature] = useState('98');\n  const [result, setResult] = useState('NEGATIVE'); // const [bloodPressure, setBloodPressure] = useState('');\n  //  const [comments, setComments] = useState('');\n  //  const [heartBeat, setHeartBeat] = useState('');\n  //  const [oxygenLevel, setOxygenLevel] = useState('');\n  //  const [temperature, setTemperature] = useState('');\n  //  const [result, setResult] = useState('');\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const payload = {\n      bloodPressure,\n      comments,\n      heartBeat,\n      oxygenLevel,\n      result,\n      temperature\n    };\n    doUpdateLabResult(id, payload).subscribe(response => {\n      appNotification.showSuccess(\"Succesfully Updated Lab Result\");\n      history.push(\"/lab-history\");\n    }, errorHandler);\n  }\n\n  useEffect(() => {\n    doGetTestRequestByID(id).subscribe(result => {\n      setTestRequest(result);\n      console.log(result);\n    }, errorHandler);\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    className: classes.mt40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.paperWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Update Lab Result\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TestRequestDetail, {\n    testRequest: testRequest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: bloodPressure,\n    onInput: e => setBloodPressure(e.target.value),\n    required: true,\n    className: classes.w100,\n    fullWidth: true,\n    id: \"bloodPressure\",\n    label: \"Blood Pressure\",\n    name: \"bloodPressure\",\n    autoComplete: \"bloodPressure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: heartBeat,\n    onInput: e => setHeartBeat(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"heartBeat\",\n    label: \"Heart Beat\",\n    name: \"heartBeat\",\n    autoComplete: \"heartBeat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: oxygenLevel,\n    onInput: e => setOxygenLevel(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"oxygenLevel\",\n    label: \"Oxygen Level\",\n    name: \"oxygenLevel\",\n    autoComplete: \"oxygenLevel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: temperature,\n    onInput: e => setTemperature(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"temperature\",\n    label: \"Body Temperature\",\n    name: \"temperature\",\n    autoComplete: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.select100Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-result-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 45\n    }\n  }, \"Test Result\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: result,\n    onChange: e => setResult(e.target.value),\n    label: \"Test Result\",\n    className: classes.select100,\n    inputProps: {\n      name: 'result',\n      id: 'selectLabResult'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"POSITIVE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 49\n    }\n  }, \"Positive\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"NEGATIVE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 49\n    }\n  }, \"Negative\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(TextareaAutosize, {\n    className: classes.w100,\n    \"aria-label\": \"comments\",\n    rowsMin: 3,\n    value: comments,\n    name: \"comments\",\n    label: \"comments\",\n    id: \"comments\",\n    onInput: e => setComments(e.target.value),\n    placeholder: \"Comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 41\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"Update Lab Result\")))))));\n}\n\nexport default UpdateLabResult;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/lab/UpdateLabResult.js"],"names":["Button","Container","FormControl","Grid","makeStyles","React","TextField","Typography","useEffect","useHistory","useState","doUpdateLabResult","appNotification","useLocation","useRouteMatch","useDispatch","doGetTestRequestByID","InputLabel","Select","TextareaAutosize","TestRequestDetail","errorHandler","useStyles","theme","paperWhite","margin","padding","display","flexDirection","alignItems","backgroundColor","mt40","marginTop","w100","width","select100Form","formControl","spacing","minWidth","selectEmpty","formContainer","form","submit","UpdateLabResult","classes","history","location","params","dispatch","id","testRequest","setTestRequest","bloodPressure","setBloodPressure","comments","setComments","heartBeat","setHeartBeat","oxygenLevel","setOxygenLevel","temperature","setTemperature","result","setResult","handleSubmit","event","preventDefault","payload","subscribe","response","showSuccess","push","console","log","e","target","value","select100","name"],"mappings":";AAAA,SACIA,MADJ,EAEIC,SAFJ,EAGIC,WAHJ,EAIIC,IAJJ,EAKIC,UALJ,EAMIC,KANJ,EAOIC,SAPJ,EAQIC,UARJ,EASIC,SATJ,EAUIC,UAVJ,EAWIC,QAXJ,QAYO,cAZP;AAaA,SAAQC,iBAAR,QAAgC,iBAAhC;AACA,SAAQC,eAAR,QAA8B,yCAA9B;AACA,SAAQC,WAAR,EAAqBC,aAArB,QAAyC,kBAAzC;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,oBAAR,QAAmC,uCAAnC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,iBAAP,MAA8B,mCAA9B;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AAGA,MAAMC,SAAS,GAAGlB,UAAU,CAAEmB,KAAD,KAAY;AACrCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,MAAM,EAAE,QADA;AAERC,IAAAA,OAAO,EAAE,qBAFD;AAGRC,IAAAA,OAAO,EAAE,MAHD;AAIRC,IAAAA,aAAa,EAAE,QAJP;AAKRC,IAAAA,UAAU,EAAE,QALJ;AAMRC,IAAAA,eAAe,EAAC;AANR,GADyB;AASrCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,SAAS,EAAC;AADT,GATgC;AAYrCC,EAAAA,IAAI,EAAC;AACDC,IAAAA,KAAK,EAAE;AADN,GAZgC;AAerCC,EAAAA,aAAa,EAAC;AACVD,IAAAA,KAAK,EAAE;AADG,GAfuB;AAkBrCE,EAAAA,WAAW,EAAE;AACTX,IAAAA,MAAM,EAAEF,KAAK,CAACc,OAAN,CAAc,CAAd,CADC;AAETC,IAAAA,QAAQ,EAAE;AAFD,GAlBwB;AAsBrCC,EAAAA,WAAW,EAAE;AACTP,IAAAA,SAAS,EAAET,KAAK,CAACc,OAAN,CAAc,CAAd;AADF,GAtBwB;AA0BrCG,EAAAA,aAAa,EAAC;AACZd,IAAAA,OAAO,EAAC;AADI,GA1BuB;AA6BrCe,EAAAA,IAAI,EAAE;AACFP,IAAAA,KAAK,EAAE,MADL;AACa;AACfF,IAAAA,SAAS,EAAET,KAAK,CAACc,OAAN,CAAc,CAAd;AAFT,GA7B+B;AAiCrCK,EAAAA,MAAM,EAAE;AACJjB,IAAAA,MAAM,EAAEF,KAAK,CAACc,OAAN,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB;AADJ;AAjC6B,CAAZ,CAAD,CAA5B;;AAsCA,SAASM,eAAT,GAA2B;AAEvB,QAAMC,OAAO,GAAGtB,SAAS,EAAzB;AAEA,QAAMuB,OAAO,GAAGpC,UAAU,EAA1B;AACA,MAAIqC,QAAQ,GAAGjC,WAAW,EAA1B;AACA,MAAI;AAACkC,IAAAA;AAAD,MAAWjC,aAAa,CAAC,wBAAD,CAA5B;AACA,QAAMkC,QAAQ,GAAGjC,WAAW,EAA5B;AACA,QAAM;AAACkC,IAAAA;AAAD,MAAMF,MAAZ;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCzC,QAAQ,CAAC,IAAD,CAA9C;AAEA,QAAM,CAAC0C,aAAD,EAAgBC,gBAAhB,IAAoC3C,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAAC4C,QAAD,EAAWC,WAAX,IAA0B7C,QAAQ,CAAC,gBAAD,CAAxC;AACA,QAAM,CAAC8C,SAAD,EAAYC,YAAZ,IAA4B/C,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACgD,WAAD,EAAcC,cAAd,IAAgCjD,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACkD,WAAD,EAAcC,cAAd,IAAgCnD,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACoD,MAAD,EAASC,SAAT,IAAsBrD,QAAQ,CAAC,UAAD,CAApC,CAhBuB,CAiBxB;AACA;AACA;AACA;AACA;AACA;;AAOC,WAASsD,YAAT,CAAsBC,KAAtB,EAA6B;AAKzBA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,OAAO,GAAG;AACZf,MAAAA,aADY;AAEZE,MAAAA,QAFY;AAGZE,MAAAA,SAHY;AAIZE,MAAAA,WAJY;AAKZI,MAAAA,MALY;AAMZF,MAAAA;AANY,KAAhB;AAQAjD,IAAAA,iBAAiB,CAACsC,EAAD,EAAIkB,OAAJ,CAAjB,CACKC,SADL,CACgBC,QAAD,IAAc;AACrBzD,MAAAA,eAAe,CAAC0D,WAAhB,CAA4B,gCAA5B;AACAzB,MAAAA,OAAO,CAAC0B,IAAR,CAAa,cAAb;AAEH,KALL,EAKOlD,YALP;AAOH;;AAKDb,EAAAA,SAAS,CAAC,MAAM;AAGZQ,IAAAA,oBAAoB,CAACiC,EAAD,CAApB,CACKmB,SADL,CACgBN,MAAD,IAAY;AACnBX,MAAAA,cAAc,CAACW,MAAD,CAAd;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,MAAZ;AAEH,KALL,EAKOzC,YALP;AAWH,GAdQ,EAcN,EAdM,CAAT;AAmBA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAA4B,IAAA,SAAS,EAAEuB,OAAO,CAACb,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGK,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA6B,IAAA,SAAS,EAAEa,OAAO,CAACpB,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAC,IAAtB;AAA2B,IAAA,OAAO,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFH,eAMG,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA6B,IAAA,SAAS,EAAEoB,OAAO,CAACJ,aAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,WAAW,EAAEU,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,eAMI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAEN,OAAO,CAACH,IAAzB;AAA+B,IAAA,QAAQ,EAAEuB,YAAzC;AAAuD,IAAA,UAAU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAEZ,aAFX;AAGI,IAAA,OAAO,EAAEsB,CAAC,IAAIrB,gBAAgB,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAHlC;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,EAAEhC,OAAO,CAACX,IALvB;AAMI,IAAA,SAAS,MANb;AAOI,IAAA,EAAE,EAAC,eAPP;AAQI,IAAA,KAAK,EAAC,gBARV;AASI,IAAA,IAAI,EAAC,eATT;AAUI,IAAA,YAAY,EAAC,eAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,eAwBI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAEuB,SAFX;AAGI,IAAA,OAAO,EAAEkB,CAAC,IAAIjB,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,EAAE,EAAC,WANP;AAOI,IAAA,KAAK,EAAC,YAPV;AAQI,IAAA,IAAI,EAAC,WART;AASI,IAAA,YAAY,EAAC,WATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAxBJ,eAsCI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAElB,WAFX;AAGI,IAAA,OAAO,EAAEgB,CAAC,IAAIf,cAAc,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAHhC;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,EAAE,EAAC,aANP;AAOI,IAAA,KAAK,EAAC,cAPV;AAQI,IAAA,IAAI,EAAC,aART;AASI,IAAA,YAAY,EAAC,aATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAtCJ,eAoDI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AACI,IAAA,OAAO,EAAC,UADZ;AAEI,IAAA,KAAK,EAAEhB,WAFX;AAGI,IAAA,OAAO,EAAEc,CAAC,IAAIb,cAAc,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAHhC;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,SAAS,MALb;AAMI,IAAA,EAAE,EAAC,aANP;AAOI,IAAA,KAAK,EAAC,kBAPV;AAQI,IAAA,IAAI,EAAC,aART;AASI,IAAA,YAAY,EAAC,aATjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApDJ,eAoEI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,EAAEhC,OAAO,CAACT,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,+BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,oBAAC,MAAD;AACI,IAAA,MAAM,MADV;AAEI,IAAA,KAAK,EAAE2B,MAFX;AAGI,IAAA,QAAQ,EAAEY,CAAC,IAAIX,SAAS,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAH5B;AAII,IAAA,KAAK,EAAC,aAJV;AAKI,IAAA,SAAS,EAAEhC,OAAO,CAACiC,SALvB;AAMI,IAAA,UAAU,EAAE;AACRC,MAAAA,IAAI,EAAE,QADE;AAER7B,MAAAA,EAAE,EAAE;AAFI,KANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAQ,IAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ,CAFJ,CAHJ,CApEJ,eAgGI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,gBAAD;AACI,IAAA,SAAS,EAAEL,OAAO,CAACX,IADvB;AAEI,kBAAW,UAFf;AAGI,IAAA,OAAO,EAAE,CAHb;AAII,IAAA,KAAK,EAAEqB,QAJX;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,KAAK,EAAC,UANV;AAQI,IAAA,EAAE,EAAC,UARP;AASI,IAAA,OAAO,EAAEoB,CAAC,IAAInB,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAT7B;AAUI,IAAA,WAAW,EAAC,UAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAhGJ,CAFJ,eAqHI,oBAAC,MAAD;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,MAFb;AAGI,IAAA,OAAO,EAAC,WAHZ;AAII,IAAA,KAAK,EAAC,SAJV;AAKI,IAAA,SAAS,EAAEhC,OAAO,CAACF,MALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBArHJ,CADJ,CANJ,CANH,CAHL,CADJ,CADJ;AA6JH;;AAED,eAAeC,eAAf","sourcesContent":["import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    makeStyles,\n    React,\n    TextField,\n    Typography,\n    useEffect,\n    useHistory,\n    useState\n} from \"../component\"\nimport {doUpdateLabResult} from \"./labDispatcher\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {useLocation, useRouteMatch} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {doGetTestRequestByID} from \"../testrequests/testRequestDispatcher\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport TestRequestDetail from \"../testrequests/TestRequestDetail\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paperWhite: {\n        margin: \"0 auto\",\n        padding: \"20px 20px 20px 20px\",\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        backgroundColor:'white',\n    },\n    mt40:{\n        marginTop:40,\n    },\n    w100:{\n        width: '100%',\n    },\n    select100Form:{\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n    formContainer:{\n      padding:\"50 50 50 50\"\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction UpdateLabResult() {\n\n    const classes = useStyles();\n\n    const history = useHistory();\n    let location = useLocation();\n    let {params} = useRouteMatch(\"/update-lab-report/:id\");\n    const dispatch = useDispatch()\n    const {id} =params\n    const [testRequest, setTestRequest] = useState(null);\n\n    const [bloodPressure, setBloodPressure] = useState('102');\n    const [comments, setComments] = useState('Should be left');\n    const [heartBeat, setHeartBeat] = useState('97');\n    const [oxygenLevel, setOxygenLevel] = useState('95');\n    const [temperature, setTemperature] = useState('98');\n    const [result, setResult] = useState('NEGATIVE');\n   // const [bloodPressure, setBloodPressure] = useState('');\n   //  const [comments, setComments] = useState('');\n   //  const [heartBeat, setHeartBeat] = useState('');\n   //  const [oxygenLevel, setOxygenLevel] = useState('');\n   //  const [temperature, setTemperature] = useState('');\n   //  const [result, setResult] = useState('');\n\n\n\n\n\n\n    function handleSubmit(event) {\n\n\n\n\n        event.preventDefault();\n        const payload = {\n            bloodPressure,\n            comments,\n            heartBeat,\n            oxygenLevel,\n            result,\n            temperature\n        }\n        doUpdateLabResult(id,payload)\n            .subscribe((response) => {\n                appNotification.showSuccess(\"Succesfully Updated Lab Result\")\n                history.push(\"/lab-history\")\n\n            }, errorHandler)\n\n    }\n\n\n\n\n    useEffect(() => {\n\n\n        doGetTestRequestByID(id)\n            .subscribe((result) => {\n                setTestRequest(result)\n                console.log(result)\n\n            }, errorHandler)\n\n\n\n\n\n    }, [])\n\n\n\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" className={classes.mt40}>\n\n\n                 <Grid container spacing={2}  className={classes.paperWhite} >\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                       Update Lab Result\n                        <hr />\n                    </Typography>\n                    <Grid container spacing={2}  className={classes.formContainer} >\n\n                        <Grid item xs={6} >\n                            <TestRequestDetail testRequest={testRequest}></TestRequestDetail>\n\n                        </Grid>\n                        <Grid item xs={6} >\n                            <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                                <Grid container spacing={2}>\n                                    <Grid item xs={12} >\n\n\n\n\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={bloodPressure}\n                                            onInput={e => setBloodPressure(e.target.value)}\n                                            required\n                                            className={classes.w100}\n                                            fullWidth\n                                            id=\"bloodPressure\"\n                                            label=\"Blood Pressure\"\n                                            name=\"bloodPressure\"\n                                            autoComplete=\"bloodPressure\"\n                                        />\n\n\n\n                                    </Grid>\n\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={heartBeat}\n                                            onInput={e => setHeartBeat(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"heartBeat\"\n                                            label=\"Heart Beat\"\n                                            name=\"heartBeat\"\n                                            autoComplete=\"heartBeat\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={oxygenLevel}\n                                            onInput={e => setOxygenLevel(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"oxygenLevel\"\n                                            label=\"Oxygen Level\"\n                                            name=\"oxygenLevel\"\n                                            autoComplete=\"oxygenLevel\"\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} >\n                                        <TextField\n                                            variant=\"outlined\"\n                                            value={temperature}\n                                            onInput={e => setTemperature(e.target.value)}\n                                            required\n                                            fullWidth\n                                            id=\"temperature\"\n                                            label=\"Body Temperature\"\n                                            name=\"temperature\"\n                                            autoComplete=\"temperature\"\n                                        />\n                                    </Grid>\n\n\n\n                                    <Grid item xs={12} >\n\n\n                                        <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                            <InputLabel htmlFor=\"outlined-result-native-simple\">Test Result</InputLabel>\n                                            <Select\n                                                native\n                                                value={result}\n                                                onChange={e => setResult(e.target.value)}\n                                                label=\"Test Result\"\n                                                className={classes.select100}\n                                                inputProps={{\n                                                    name: 'result',\n                                                    id: 'selectLabResult',\n                                                }}\n                                            >\n                                                <option value=\"POSITIVE\">Positive</option>\n                                                <option value=\"NEGATIVE\">Negative</option>\n                                            </Select>\n                                        </FormControl>\n\n\n\n\n                                    </Grid>\n\n\n\n                                    <Grid item xs={12}>\n\n                                        <TextareaAutosize\n                                            className={classes.w100}\n                                            aria-label=\"comments\"\n                                            rowsMin={3}\n                                            value={comments}\n                                            name=\"comments\"\n                                            label=\"comments\"\n\n                                            id=\"comments\"\n                                            onInput={e => setComments(e.target.value)}\n                                            placeholder=\"Comments\" />\n\n                                    </Grid>\n\n\n\n                                </Grid>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Update Lab Result\n                                </Button>\n\n                            </form>\n\n                        </Grid>\n                    </Grid>\n\n\n                 </Grid>\n\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default UpdateLabResult\n"]},"metadata":{},"sourceType":"module"}