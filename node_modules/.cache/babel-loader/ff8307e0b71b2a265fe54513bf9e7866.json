{"ast":null,"code":"import axios from \"axios\";\nimport { Observable } from \"rxjs\";\nimport { loadingIndicator } from \"../loader/loading-indicator\";\nimport { appNotification } from \"../notification/app-notification\";\nconst token = null;\n\nfunction setToken(token) {\n  if (token) {\n    console.log(\"setting token\", token);\n    axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\n  } else axios.defaults.headers.common['Authorization'] = null;\n}\n\naxios.interceptors.request.use(req => {\n  console.log(`${req.method} ${req.url}`);\n  return req;\n});\n\nfunction uploadFileToServer(url, data) {\n  return makeAsObservable({\n    method: 'post',\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    },\n    url,\n    data\n  }); //\n  // return new Observable((observer) => {\n  //\n  //     loadingIndicator.show();\n  //     axios( )\n  //         .then((response) => {\n  //             loadingIndicator.hide();\n  //             observer.next(response.data);\n  //             observer.complete();\n  //         })\n  //         .catch((error) => {\n  //             loadingIndicator.hide();\n  //             console.log(error)\n  //             if(error && error.response && error.response.data && error.response.data.message)\n  //                 observer.error(error.response.data.message);\n  //             else\n  //                 observer.error(\"Technical error , please try again\");\n  //\n  //\n  //         });\n  // });\n}\n\nfunction downloadFileFromServer(url, filename) {\n  loadingIndicator.show();\n  axios({\n    url: url,\n    method: 'GET',\n    responseType: 'blob' // important\n\n  }).then(response => {\n    loadingIndicator.hide();\n    console.log(response.headers);\n    const url = window.URL.createObjectURL(new Blob([response.data]));\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', filename); //link.setAttribute('download', response.headers[\"content-disposition\"].split(\"filename=\")[1])\n\n    link.click();\n    window.URL.revokeObjectURL(url);\n  }).catch(error => {\n    loadingIndicator.hide();\n    appNotification.showError(\"Unable to download file from \" + url);\n  });\n}\n\nfunction makeAsObservable(request) {\n  return new Observable(observer => {\n    loadingIndicator.show();\n    console.log(\"going  for\", request.url);\n    axios(request).then(response => {\n      loadingIndicator.hide();\n      console.log(\"received for\", request.url);\n      observer.next(response.data);\n      observer.complete();\n    }).catch(error => {\n      console.log(\"error for\", request.url);\n      loadingIndicator.hide();\n      if (error && error.response && error.response.data && error.response.data.message) observer.error(error.response.data.message);else observer.error(\"Technical error , please try again\");\n    });\n  });\n}\n\nfunction post(url, data) {\n  return makeAsObservable({\n    method: 'post',\n    url,\n    data\n  });\n}\n\nfunction get(url) {\n  return makeAsObservable({\n    method: 'get',\n    url\n  });\n}\n\nfunction put(url, data) {\n  return makeAsObservable({\n    method: 'put',\n    url,\n    data\n  });\n}\n\nfunction deleteRequest(url) {\n  return makeAsObservable({\n    method: 'delete',\n    url\n  });\n}\n\nexport default {\n  setToken,\n  delete: deleteRequest,\n  put,\n  get,\n  post,\n  uploadFileToServer,\n  downloadFileFromServer\n}; // export default function cube() {\n//     return {setToken, delete: deleteRequest, put, get, post};\n// };","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/shared/services/http-service.js"],"names":["axios","Observable","loadingIndicator","appNotification","token","setToken","console","log","defaults","headers","common","interceptors","request","use","req","method","url","uploadFileToServer","data","makeAsObservable","downloadFileFromServer","filename","show","responseType","then","response","hide","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","click","revokeObjectURL","catch","error","showError","observer","next","complete","message","post","get","put","deleteRequest","delete"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport {Observable} from \"rxjs\";\r\nimport {loadingIndicator} from \"../loader/loading-indicator\";\r\nimport {appNotification} from \"../notification/app-notification\";\r\n\r\nconst token = null;\r\n\r\nfunction setToken(token) {\r\n\r\n    if (token){\r\n        console.log(\"setting token\" , token)\r\n        axios.defaults.headers.common['Authorization'] = \"Bearer \" + token;\r\n    }\r\n    else\r\n        axios.defaults.headers.common['Authorization'] = null\r\n}\r\n\r\n\r\naxios.interceptors.request.use(req => {\r\n     console.log(`${req.method} ${req.url}`);\r\n\r\n    return req;\r\n});\r\n\r\nfunction uploadFileToServer(url,data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'post',\r\n        headers: {\r\n            \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n        url,\r\n        data\r\n    })\r\n    //\r\n    // return new Observable((observer) => {\r\n    //\r\n    //     loadingIndicator.show();\r\n    //     axios( )\r\n    //         .then((response) => {\r\n    //             loadingIndicator.hide();\r\n    //             observer.next(response.data);\r\n    //             observer.complete();\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             loadingIndicator.hide();\r\n    //             console.log(error)\r\n    //             if(error && error.response && error.response.data && error.response.data.message)\r\n    //                 observer.error(error.response.data.message);\r\n    //             else\r\n    //                 observer.error(\"Technical error , please try again\");\r\n    //\r\n    //\r\n    //         });\r\n    // });\r\n\r\n}\r\n\r\nfunction downloadFileFromServer(url,filename) {\r\n\r\n    loadingIndicator.show();\r\n    axios({\r\n        url: url,\r\n        method: 'GET',\r\n        responseType: 'blob', // important\r\n    }).then((response) => {\r\n        loadingIndicator.hide();\r\n        console.log( response.headers)\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.setAttribute('download', filename);\r\n        //link.setAttribute('download', response.headers[\"content-disposition\"].split(\"filename=\")[1])\r\n        link.click();\r\n        window.URL.revokeObjectURL(url);\r\n    }).catch((error) => {\r\n        loadingIndicator.hide();\r\n        appNotification.showError(\"Unable to download file from \" + url)\r\n\r\n\r\n    });\r\n\r\n}\r\n\r\nfunction makeAsObservable(request) {\r\n\r\n    return new Observable((observer) => {\r\n        loadingIndicator.show();\r\n        console.log(\"going  for\",request.url)\r\n        axios(request)\r\n            .then((response) => {\r\n                loadingIndicator.hide();\r\n                console.log(\"received for\",request.url)\r\n                observer.next(response.data);\r\n                observer.complete();\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"error for\",request.url)\r\n                loadingIndicator.hide();\r\n                if(error && error.response && error.response.data && error.response.data.message)\r\n                    observer.error(error.response.data.message);\r\n                else\r\n                    observer.error(\"Technical error , please try again\");\r\n\r\n\r\n            });\r\n    });\r\n\r\n}\r\n\r\nfunction post(url, data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'post',\r\n        url,\r\n        data\r\n    });\r\n\r\n}\r\n\r\nfunction get(url) {\r\n\r\n    return makeAsObservable({\r\n        method: 'get',\r\n        url\r\n    });\r\n\r\n}\r\n\r\nfunction put(url, data) {\r\n\r\n    return makeAsObservable({\r\n        method: 'put',\r\n        url,\r\n        data\r\n    });\r\n\r\n}\r\n\r\nfunction deleteRequest(url) {\r\n\r\n    return makeAsObservable({\r\n        method: 'delete',\r\n        url\r\n    });\r\n\r\n}\r\n\r\nexport default {setToken, delete: deleteRequest, put, get, post,uploadFileToServer,downloadFileFromServer};\r\n// export default function cube() {\r\n//     return {setToken, delete: deleteRequest, put, get, post};\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}