{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/authority/PendingApprovals.js\";\nimport { Container, Grid, React, useEffect, useSelector, useState } from \"../component\";\nimport MUIDataTable from \"mui-datatables\";\nimport Chip from '@material-ui/core/Chip';\nimport { useGlobalStyles } from \"../styles/GlobalStyles\";\nimport { ViewAttachmentButton } from \"./components/ViewAttachmentButton\";\nimport { PendingApprovalActions } from \"./components/PendingApprovalActions\";\nimport { reloadPendingApprovals } from \"./shared/pending-user-utils\";\nimport { useDispatch } from \"react-redux\";\n\nfunction PendingApprovals() {\n  const classes = useGlobalStyles();\n  const [data, setData] = useState([]);\n  const {\n    pendingUsers,\n    pendingUsersLoaded,\n    pendingUserGridData\n  } = useSelector(state => state.authority);\n  const dispatch = useDispatch();\n  const columns = [{\n    name: 'S.No',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        return /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 28\n          }\n        }, dataIndex + 1);\n      }\n    }\n  }, {\n    name: \"Name\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Email\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: 'Role',\n    options: {\n      filter: true,\n      filterType: 'multiselect',\n      customBodyRenderLite: dataIndex => {\n        let value = data[dataIndex][2];\n        return /*#__PURE__*/React.createElement(Chip, {\n          label: value,\n          key: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n  }, {\n    name: 'View Document',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        return /*#__PURE__*/React.createElement(ViewAttachmentButton, {\n          dataIndex: dataIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n  }, {\n    name: 'Actions',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        return /*#__PURE__*/React.createElement(PendingApprovalActions, {\n          dataIndex: dataIndex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 28\n          }\n        });\n      }\n    }\n  }];\n  const options = {\n    filter: true,\n    filterType: 'dropdown',\n    responsive: 'standard',\n    selectableRows: 'none'\n  };\n  useEffect(() => {\n    if (pendingUsersLoaded == false) reloadPendingApprovals(dispatch);else {\n      setData(pendingUserGridData);\n    }\n  }, [pendingUserGridData]);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    component: \"main\",\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Pending Approvals\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MUIDataTable, {\n    title: \"List of Users\",\n    data: data,\n    columns: columns,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default PendingApprovals;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/authority/PendingApprovals.js"],"names":["Container","Grid","React","useEffect","useSelector","useState","MUIDataTable","Chip","useGlobalStyles","ViewAttachmentButton","PendingApprovalActions","reloadPendingApprovals","useDispatch","PendingApprovals","classes","data","setData","pendingUsers","pendingUsersLoaded","pendingUserGridData","state","authority","dispatch","columns","name","options","filter","sort","empty","customBodyRenderLite","dataIndex","filterType","value","responsive","selectableRows","heroContent"],"mappings":"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","sourcesContent":["import {Container, Grid, React, useEffect, useSelector, useState,} from \"../component\"\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\r\nimport {ViewAttachmentButton} from \"./components/ViewAttachmentButton\";\r\nimport {PendingApprovalActions} from \"./components/PendingApprovalActions\";\r\nimport {reloadPendingApprovals} from \"./shared/pending-user-utils\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nfunction PendingApprovals() {\r\n\r\n    const classes = useGlobalStyles();\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const {pendingUsers,pendingUsersLoaded,pendingUserGridData} = useSelector(state => state.authority);\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const columns = [\r\n        {\r\n            name: 'S.No',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return <strong>{dataIndex + 1}</strong>;\r\n\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n\r\n            name: \"Email\",\r\n            options: {\r\n                filter: true,\r\n            }\r\n        },\r\n        {\r\n            name: 'Role',\r\n            options: {\r\n                filter: true,\r\n                filterType: 'multiselect',\r\n                customBodyRenderLite: (dataIndex) => {\r\n                    let value = data[dataIndex][2];\r\n                    return <Chip label={value} key={value}/>;\r\n\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: 'View Document',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n\r\n                    return <ViewAttachmentButton dataIndex={dataIndex} />\r\n                },\r\n            }\r\n        },\r\n        {\r\n            name: 'Actions',\r\n            options: {\r\n                filter: false,\r\n                sort: false,\r\n                empty: true,\r\n                customBodyRenderLite: (dataIndex) => {\r\n                    return <PendingApprovalActions dataIndex={dataIndex} />\r\n                },\r\n            }\r\n        },\r\n    ];\r\n\r\n    const options = {\r\n        filter: true,\r\n        filterType: 'dropdown',\r\n        responsive: 'standard',\r\n        selectableRows: 'none'\r\n    };\r\n\r\n\r\n\r\nuseEffect(()=>{\r\n\r\n\r\n    if(pendingUsersLoaded== false)\r\n        reloadPendingApprovals(dispatch);\r\n    else{\r\n        setData(pendingUserGridData)\r\n    }\r\n\r\n\r\n},[pendingUserGridData])\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\r\n                <h1>\r\n                    Pending Approvals\r\n                </h1>\r\n                <hr/>\r\n            </Container>\r\n            <Container component=\"main\" maxWidth=\"md\">\r\n                <Grid container>\r\n                    <Grid item md={12}>\r\n\r\n                        <MUIDataTable title={\"List of Users\"} data={data} columns={columns} options={options}/>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default PendingApprovals\r\n"]},"metadata":{},"sourceType":"module"}