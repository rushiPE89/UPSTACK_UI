{"ast":null,"code":"import { environment } from \"../environment\";\nimport http from \"../shared/services/http-service.js\";\nimport { concatMap, map } from \"rxjs/operators\";\nimport { LOGOUT } from \"./authStore\";\nimport { getAsUser } from \"./user\";\nexport const documentUploadUrl = environment.baseUrl + '/documents/upload/';\nexport const doLogin = loginRequest => {\n  clearAuthToken();\n  return getToken(loginRequest).pipe(concatMap(token => getMyDetailsWithToken(token)));\n};\nexport const doUploadDocument = (id, file) => {\n  const url = documentUploadUrl + id;\n  let formData = new FormData();\n  formData.append(\"file\", file);\n  return http.uploadFileToServer(url, formData);\n};\nexport const getToken = loginRequest => {\n  const url = environment.baseUrl + '/auth/login';\n  return http.post(url, loginRequest).pipe(map(response => {\n    return response.token;\n  }));\n};\nexport const doRegisterUser = registerRequest => {\n  const url = environment.baseUrl + '/auth/register';\n  return http.post(url, registerRequest).pipe(concatMap(response => {\n    const loginRequest = {};\n    loginRequest.userName = registerRequest.userName;\n    loginRequest.password = registerRequest.password;\n    return doLogin(loginRequest);\n  }));\n};\nexport const doRegisterDoctor = registerRequest => {\n  const url = environment.baseUrl + '/auth/doctor/register';\n  return http.post(url, registerRequest);\n};\nexport const doRegisterTester = registerRequest => {\n  const url = environment.baseUrl + '/auth/tester/register';\n  return http.post(url, registerRequest);\n};\n\nconst getMyDetailsWithToken = token => {\n  const url = environment.baseUrl + '/users/details';\n  setAuthToken(token);\n  return http.get(url).pipe(map(userObject => {\n    const authInfo = {};\n    authInfo.token = token;\n    authInfo.user = getAsUser(userObject);\n    return authInfo;\n  }));\n};\n\nexport const setAuthToken = token => {\n  http.setToken(token);\n};\nexport const clearAuthToken = () => {\n  http.setToken(null);\n};\nexport const doLogout = (dispatch, history) => {\n  dispatch({\n    type: LOGOUT\n  });\n  setAuthToken(null);\n  localStorage.clear();\n  history.push(\"/\");\n};","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/auth/authDispatcher.js"],"names":["environment","http","concatMap","map","LOGOUT","getAsUser","documentUploadUrl","baseUrl","doLogin","loginRequest","clearAuthToken","getToken","pipe","token","getMyDetailsWithToken","doUploadDocument","id","file","url","formData","FormData","append","uploadFileToServer","post","response","doRegisterUser","registerRequest","userName","password","doRegisterDoctor","doRegisterTester","setAuthToken","get","userObject","authInfo","user","setToken","doLogout","dispatch","history","type","localStorage","clear","push"],"mappings":"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","sourcesContent":["import {environment} from \"../environment\";\nimport http from \"../shared/services/http-service.js\";\nimport {concatMap, map} from \"rxjs/operators\";\nimport {LOGOUT} from \"./authStore\";\nimport {getAsUser} from \"./user\";\n\nexport const documentUploadUrl = environment.baseUrl + '/documents/upload/';\n\nexport const doLogin = (loginRequest) => {\n\n    clearAuthToken();\n    return getToken(loginRequest)\n        .pipe(\n            concatMap((token) => getMyDetailsWithToken(token)),\n        );\n\n\n}\nexport const doUploadDocument = (id,file) => {\n\n\n\n    const url = documentUploadUrl +id;\n    let formData = new FormData();\n\n    formData.append(\"file\", file);\n\n\n\n\n    return http.uploadFileToServer(url,formData)\n\n\n}\n\nexport const getToken = (loginRequest) => {\n\n    const url = environment.baseUrl + '/auth/login';\n\n    return http.post(url, loginRequest)\n        .pipe(\n            map((response) => {\n\n\n                return response.token;\n            })\n        );\n}\nexport const doRegisterUser = (registerRequest) => {\n\n    const url = environment.baseUrl + '/auth/register';\n\n    return http.post(url, registerRequest)\n        .pipe(\n            concatMap((response) => {\n\n\n                const loginRequest = {};\n                loginRequest.userName = registerRequest.userName;\n                loginRequest.password = registerRequest.password;\n                return doLogin(loginRequest);\n            })\n        );\n}\n\nexport const doRegisterDoctor = (registerRequest) => {\n\n    const url = environment.baseUrl + '/auth/doctor/register';\n\n    return http.post(url, registerRequest);\n\n}\nexport const doRegisterTester = (registerRequest) => {\n\n    const url = environment.baseUrl + '/auth/tester/register';\n\n    return http.post(url, registerRequest);\n}\n\nconst getMyDetailsWithToken = (token) => {\n\n\n    const url = environment.baseUrl + '/users/details';\n    setAuthToken(token)\n\n    return http.get(url).pipe(\n        map((userObject) => {\n\n            const authInfo = {}\n            authInfo.token = token;\n            authInfo.user = getAsUser(userObject);\n            return authInfo;\n\n        })\n    );\n\n\n}\n\n\n\n\n\nexport const setAuthToken = (token) => {\n    http.setToken(token)\n}\n\nexport const clearAuthToken = () => {\n    http.setToken(null)\n}\n\nexport const doLogout = (dispatch,history) => {\n\n\n    dispatch({type: LOGOUT});\n    setAuthToken(null)\n    localStorage.clear()\n    history.push(\"/\")\n\n\n}\n"]},"metadata":{},"sourceType":"module"}