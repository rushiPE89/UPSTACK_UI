{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/auth/Register.js\";\nimport { Button, Checkbox, Container, FormControl, FormControlLabel, FormLabel, Grid, Link, makeStyles, MuiAlert, Radio, RadioGroup, React, Snackbar, TextField, Typography, useHistory, useState } from \"../component\";\nimport { appNotification } from \"../shared/notification/app-notification\";\nimport { doRegisterDoctor, doRegisterTester, doRegisterUser } from \"./authDispatcher\";\nimport { LOGIN } from \"./authStore\";\nimport { useDispatch } from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { getAsFormatted } from \"../shared/date-helpers\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction Register() {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [open, setOpen] = React.useState(false);\n  const [error_message, set_error_message] = React.useState(false);\n  const [userName, setUserName] = useState('user');\n  const [firstName, setFirstName] = useState('user');\n  const [lastName, setLastName] = useState('uslast');\n  const [email, setEmail] = useState('user@upgrad.com');\n  const [dateOfBirth, setDateOfBirth] = useState('1981-11-21');\n  const [password, setPassword] = useState('password');\n  const [confirmPassword, setConfirmPassword] = useState('password');\n  const [address, setAddress] = useState('some address ,some day');\n  const [pinCode, setPinCode] = useState('45787878');\n  const [role, setRole] = useState(\"USER\");\n  const [phoneNumber, setPhoneNumber] = useState(\"45454545\");\n  const [gender, setGender] = useState(\"MALE\");\n  const [isAgreed, setIsAgreed] = useState(false); //\n  // const [userName, setUserName] = useState('');\n  // const [firstName, setFirstName] = useState('');\n  //const [confirmPassword, setConfirmPassword] = useState('');\n  // const [lastName, setLastName] = useState('');\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState('');\n  // const [address, setAddress] = useState('');\n  //\n  // const [pinCode, setPinCode] = useState('');\n  // const [userRole, setRole] = useState(\"\");\n  // const [phoneNumber,setPhoneNumber] = useState(\"\");\n  // const [gender, setGender] = useState(\"MALE\");\n\n  function getRoles(input) {\n    const isUser = input === \"USER\";\n    const isDoctor = input === \"DOCTOR\";\n    const isTester = input === \"TESTER\";\n    return {\n      isUser,\n      isDoctor,\n      isTester\n    };\n  }\n\n  function callObservable(subscriberMethod, callback) {\n    subscriberMethod.subscribe(response => {\n      callback(response);\n    }, error => {\n      appNotification.showError(error);\n    });\n  }\n\n  function registerUser(payload) {\n    callObservable(doRegisterUser(payload), response => {\n      const currentUser = response.user;\n      const token = response.token;\n      appNotification.showSuccess(\"Succesfully Registered\");\n      dispatch({\n        type: LOGIN,\n        \"payload\": response\n      });\n      history.push(\"/profile\");\n    });\n  }\n\n  function registerDoctor(payload) {\n    callObservable(doRegisterDoctor(payload), response => {\n      appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\");\n      history.push(\"/upload-document/\" + role + \"/\" + response.id);\n    });\n  }\n\n  function registerTester(payload) {\n    callObservable(doRegisterTester(payload), response => {\n      appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\");\n      history.push(\"/upload-document/\" + role + \"/\" + response.id);\n    });\n  }\n\n  function onUserTypeChanged(evt, role) {\n    if (evt.target.checked) setRole(role);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const payload = {\n      firstName,\n      lastName,\n      email,\n      password,\n      confirmPassword,\n      dateOfBirth: getAsFormatted(new Date(dateOfBirth)),\n      address,\n      pinCode,\n      userName,\n      phoneNumber,\n      gender\n    };\n\n    if (!isAgreed) {\n      appNotification.showError(\"Please agree the terms and conditions\");\n      return;\n    }\n\n    if (confirmPassword !== password) {\n      appNotification.showError(\"Passwords Mismatch\");\n      return;\n    }\n\n    let {\n      isUser,\n      isDoctor,\n      isTester\n    } = getRoles(role);\n    if (isUser) registerUser(payload);else if (isDoctor) registerDoctor(payload);else if (isTester) registerTester(payload);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, \"Register to take Laboratory Tests.\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    component: \"fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    component: \"legend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }, \"Select Role to Register\"), /*#__PURE__*/React.createElement(RadioGroup, {\n    row: true,\n    \"aria-label\": \"userRole\",\n    name: \"userRole\",\n    id: \"userroleDetail\",\n    value: role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"USER\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: e => onUserTypeChanged(e, \"USER\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 81\n      }\n    }),\n    label: \"Patient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"TESTER\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: e => onUserTypeChanged(e, \"TESTER\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 83\n      }\n    }),\n    label: \"Tester\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    value: \"DOCTOR\",\n    control: /*#__PURE__*/React.createElement(Radio, {\n      onChange: e => onUserTypeChanged(e, \"DOCTOR\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 83\n      }\n    }),\n    label: \"Doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 41\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    name: \"firstName\",\n    value: firstName,\n    onInput: e => setFirstName(e.target.value),\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    id: \"firstName\",\n    label: \"First Name\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: lastName,\n    onInput: e => setLastName(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"lastName\",\n    label: \"Last Name\",\n    name: \"lastName\",\n    autoComplete: \"lname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-gender-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 37\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: gender,\n    onChange: e => {\n      setGender(e.target.value);\n    },\n    label: \"Gender\",\n    inputProps: {\n      name: 'gender',\n      id: 'outlined-gender-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"FEMALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 41\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"MALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 41\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"OTHER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 41\n    }\n  }, \"Other\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: dateOfBirth,\n    onInput: e => setDateOfBirth(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"dateOfBirth\",\n    label: \"Date of Birth\",\n    name: \"dateOfBirth\",\n    type: \"date\",\n    autoComplete: \"dateOfBirth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: userName,\n    onInput: e => setUserName(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"userName\",\n    label: \"User Name\",\n    name: \"userName\",\n    autoComplete: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: password,\n    onInput: e => setPassword(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: confirmPassword,\n    onInput: e => setConfirmPassword(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    id: \"confirmPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: email,\n    onInput: e => setEmail(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: phoneNumber,\n    onInput: e => setPhoneNumber(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"mobile\",\n    label: \"Mobile No.\",\n    type: \"number\",\n    id: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: address,\n    onInput: e => setAddress(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"address\",\n    label: \"Address\",\n    type: \"text\",\n    id: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: pinCode,\n    onInput: e => setPinCode(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"pinCode\",\n    label: \"Pincode\",\n    type: \"text\",\n    id: \"pinCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    id: \"agreecondition\",\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isAgreed,\n      onChange: e => {\n        setIsAgreed(e.target.checked);\n      },\n      value: \"allowExtraEmails\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 46\n      }\n    }),\n    label: \"I agree to abide by all government regulation.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 25\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 33\n    }\n  }, \"Already have an account? Sign in\")))))));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/auth/Register.js"],"names":["Button","Checkbox","Container","FormControl","FormControlLabel","FormLabel","Grid","Link","makeStyles","MuiAlert","Radio","RadioGroup","React","Snackbar","TextField","Typography","useHistory","useState","appNotification","doRegisterDoctor","doRegisterTester","doRegisterUser","LOGIN","useDispatch","InputLabel","Select","getAsFormatted","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","formControl","margin","minWidth","selectEmpty","form","width","submit","Register","classes","history","dispatch","open","setOpen","error_message","set_error_message","userName","setUserName","firstName","setFirstName","lastName","setLastName","email","setEmail","dateOfBirth","setDateOfBirth","password","setPassword","confirmPassword","setConfirmPassword","address","setAddress","pinCode","setPinCode","role","setRole","phoneNumber","setPhoneNumber","gender","setGender","isAgreed","setIsAgreed","getRoles","input","isUser","isDoctor","isTester","callObservable","subscriberMethod","callback","subscribe","response","error","showError","registerUser","payload","currentUser","user","token","showSuccess","type","push","registerDoctor","id","registerTester","onUserTypeChanged","evt","target","checked","handleSubmit","event","preventDefault","Date","e","value","name"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Checkbox,\n    Container,\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    Link,\n    makeStyles,\n    MuiAlert,\n    Radio,\n    RadioGroup,\n    React,\n    Snackbar,\n    TextField,\n    Typography,\n    useHistory,\n    useState\n} from \"../component\"\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {doRegisterDoctor, doRegisterTester, doRegisterUser} from \"./authDispatcher\";\nimport {LOGIN} from \"./authStore\";\nimport {useDispatch} from \"react-redux\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {getAsFormatted} from \"../shared/date-helpers\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n\n        formControl: {\n            margin: theme.spacing(1),\n            minWidth: 120,\n        },\n        selectEmpty: {\n            marginTop: theme.spacing(2),\n        },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\n\nfunction Register() {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch()\n    const [open, setOpen] = React.useState(false);\n    const [error_message, set_error_message] = React.useState(false);\n\n\n    const [userName, setUserName] = useState('user');\n    const [firstName, setFirstName] = useState('user');\n    const [lastName, setLastName] = useState('uslast');\n    const [email, setEmail] = useState('user@upgrad.com');\n    const [dateOfBirth, setDateOfBirth] = useState('1981-11-21');\n    const [password, setPassword] = useState('password');\n    const [confirmPassword, setConfirmPassword] = useState('password');\n    const [address, setAddress] = useState('some address ,some day');\n\n    const [pinCode, setPinCode] = useState('45787878');\n    const [role, setRole] = useState(\"USER\");\n    const [phoneNumber,setPhoneNumber] = useState(\"45454545\");\n    const [gender, setGender] = useState(\"MALE\");\n    const [isAgreed, setIsAgreed] = useState(false);\n\n    //\n    // const [userName, setUserName] = useState('');\n    // const [firstName, setFirstName] = useState('');\n    //const [confirmPassword, setConfirmPassword] = useState('');\n    // const [lastName, setLastName] = useState('');\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState('');\n    // const [address, setAddress] = useState('');\n    //\n    // const [pinCode, setPinCode] = useState('');\n    // const [userRole, setRole] = useState(\"\");\n    // const [phoneNumber,setPhoneNumber] = useState(\"\");\n    // const [gender, setGender] = useState(\"MALE\");\n\n\n\n    function getRoles (input){\n\n        const isUser = (input === \"USER\")\n        const isDoctor = (input === \"DOCTOR\")\n        const isTester = (input === \"TESTER\")\n\n\n        return {isUser,isDoctor,isTester}\n    }\n\n    function callObservable(subscriberMethod,callback) {\n\n        subscriberMethod\n            .subscribe((response) => {\n\n                callback(response)\n\n            }, (error => {\n\n\n                appNotification.showError(error)\n            }))\n\n    }\n    function registerUser(payload) {\n\n\n        callObservable(doRegisterUser(payload),(response)=>{\n\n            const currentUser = response.user\n            const token = response.token\n\n            appNotification.showSuccess(\"Succesfully Registered\")\n            dispatch({type: LOGIN, \"payload\": response});\n            history.push(\"/profile\")\n\n        })\n\n    }\n    function registerDoctor(payload) {\n\n        callObservable(doRegisterDoctor(payload),(response)=>{\n            appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\")\n\n            history.push(\"/upload-document/\" + role +\"/\" + response.id)\n\n        })\n\n\n\n    }\n    function registerTester(payload) {\n\n        callObservable(doRegisterTester(payload),(response)=>{\n\n\n\n            appNotification.showSuccess(\"Succesfully Registered,Please upload Document to continue\")\n\n            history.push(\"/upload-document/\" + role +\"/\" + response.id)\n\n        })\n\n    }\n\n    function onUserTypeChanged(evt,role){\n        if(evt.target.checked)\n            setRole(role)\n\n    }\n    function handleSubmit(event) {\n        event.preventDefault();\n\n\n\n\n\n        const payload = {\n            firstName,\n            lastName,\n            email,\n            password,\n            confirmPassword,\n            dateOfBirth:getAsFormatted(new Date(dateOfBirth)),\n            address,\n            pinCode,\n            userName,\n            phoneNumber,\n            gender\n        }\n\n\n\n        if(!isAgreed ){\n\n            appNotification.showError(\"Please agree the terms and conditions\")\n            return;\n        }\n        if(confirmPassword !== password){\n\n            appNotification.showError(\"Passwords Mismatch\")\n            return;\n        }\n        let  {isUser,isDoctor,isTester} = getRoles(role)\n\n\n        if(isUser)\n            registerUser(payload);\n        else if(isDoctor)\n            registerDoctor(payload);\n        else if(isTester)\n            registerTester(payload);\n\n\n    }\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <div className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Register to take Laboratory Tests.\n                        <hr />\n                    </Typography>\n\n\n                    <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} sm={12}>\n                                <FormControl component=\"fieldset\">\n                                    <FormLabel component=\"legend\">Select Role to Register</FormLabel>\n                                    <RadioGroup\n                                        row\n                                        aria-label=\"userRole\"\n                                        name=\"userRole\"\n                                        id=\"userroleDetail\"\n                                        value={role}\n                                        >\n\n\n                                        <FormControlLabel value=\"USER\" control={<Radio  onChange={e => onUserTypeChanged(e,\"USER\")}  />} label=\"Patient\" />\n                                        <FormControlLabel value=\"TESTER\" control={<Radio onChange={e => onUserTypeChanged(e,\"TESTER\")} />} label=\"Tester\" />\n                                        <FormControlLabel value=\"DOCTOR\" control={<Radio onChange={e => onUserTypeChanged(e,\"DOCTOR\")} />} label=\"Doctor\" />\n                                    </RadioGroup>\n                                </FormControl>\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    name=\"firstName\"\n                                    value={firstName}\n                                    onInput={e => setFirstName(e.target.value)}\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    id=\"firstName\"\n                                    label=\"First Name\"\n                                    autoFocus\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={4}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={lastName}\n                                    onInput={e => setLastName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"lastName\"\n                                    label=\"Last Name\"\n                                    name=\"lastName\"\n                                    autoComplete=\"lname\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12} sm={4}>\n\n\n                                <FormControl variant=\"outlined\" className={classes.formControl}>\n                                    <InputLabel htmlFor=\"outlined-gender-native-simple\">Gender</InputLabel>\n                                    <Select\n                                        native\n                                        value={gender}\n                                        onChange={e => {\n\n                                            setGender(e.target.value)\n                                        }}\n                                        label=\"Gender\"\n                                        inputProps={{\n                                            name: 'gender',\n                                            id: 'outlined-gender-native-simple',\n                                        }}\n                                    >\n                                        <option value=\"FEMALE\">Female</option>\n                                        <option value=\"MALE\">Male</option>\n                                        <option value=\"OTHER\">Other</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={dateOfBirth}\n                                    onInput={e => setDateOfBirth(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"dateOfBirth\"\n                                    label=\"Date of Birth\"\n                                    name=\"dateOfBirth\"\n                                    type=\"date\"\n                                    autoComplete=\"dateOfBirth\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={userName}\n                                    onInput={e => setUserName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"userName\"\n                                    label=\"User Name\"\n                                    name=\"userName\"\n                                    autoComplete=\"userName\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={password}\n                                    onInput={e => setPassword(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={confirmPassword}\n                                    onInput={e => setConfirmPassword(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"confirmPassword\"\n                                    label=\"Confirm Password\"\n                                    type=\"password\"\n                                    id=\"confirmPassword\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onInput={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={phoneNumber}\n                                    onInput={e => setPhoneNumber(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"mobile\"\n                                    label=\"Mobile No.\"\n                                    type=\"number\"\n                                    id=\"mobile\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={address}\n                                    onInput={e => setAddress(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"address\"\n                                    label=\"Address\"\n                                    type=\"text\"\n                                    id=\"address\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={pinCode}\n                                    onInput={e => setPinCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"pinCode\"\n                                    label=\"Pincode\"\n                                    type=\"text\"\n                                    id=\"pinCode\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <FormControlLabel\n                                    id=\"agreecondition\"\n                                    control={<Checkbox checked={isAgreed} onChange={e => {\n                                        setIsAgreed(e.target.checked)\n                                    }} value=\"allowExtraEmails\" color=\"primary\" />}\n                                    label=\"I agree to abide by all government regulation.\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Register\n          </Button>\n                        <Grid container justify=\"flex-end\">\n                            <Grid item>\n                                <Link to=\"/login\" variant=\"body2\">\n                                    Already have an account? Sign in\n              </Link>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}