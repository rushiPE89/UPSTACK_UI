{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/authority/AuthorityDashboard.js\";\nimport { Container, Grid, React, Typography, useState } from \"../component\";\nimport 'chartjs-plugin-datalabels';\nimport { appNotification } from \"../shared/notification/app-notification\";\nimport { doGetAnalytics } from \"./shared/authorityDispatcher\";\nimport { Bar, Doughnut } from 'react-chartjs-2';\nimport { useGlobalStyles } from \"../styles/GlobalStyles\";\nimport { getAllHomeQuarantineAdmitChartDetails, getAllPostiveNegativeChartDetails, getPincodeHomeQuarantineAdmissionDistributionChartDetails, getPincodePositiveNegativeDistributionChartDetails } from \"./shared/dashboard-charts\";\nimport { useEffect } from \"react\";\nconst pieOptions = {\n  tooltips: {\n    mode: 'index',\n    intersect: false\n  },\n  responsive: true,\n  plugins: {\n    datalabels: {\n      color: '#ffffff'\n    }\n  }\n};\nconst pincodeDistributionOptions = {\n  tooltips: {\n    mode: 'index',\n    intersect: false\n  },\n  responsive: true,\n  plugins: {\n    datalabels: {\n      display: false,\n      color: '#ffffff'\n    }\n  },\n  scales: {\n    xAxes: [{\n      stacked: true,\n      scaleLabel: {\n        display: true,\n        labelString: 'Pincode'\n      }\n    }],\n    yAxes: [{\n      stacked: true,\n      scaleLabel: {\n        display: true,\n        labelString: 'Count'\n      }\n    }]\n  }\n};\n\nfunction AuthorityDashboard() {\n  const classes = useGlobalStyles();\n  const [allPositiveNegativeChart, setAllPositiveNegativeChart] = useState({});\n  const [allHomeQuarantineAdmitChart, setAllHomeQuarantineAdmitChart] = useState({});\n  const [pincodePositiveNegativeDistributionChart, setPincodePositiveNegativeDistributionChart] = useState({});\n  const [pincodeHomeQuarantineAdmissionDistributionChart, setPincodeHomeQuarantineAdmissionDistributionChart] = useState({});\n  useEffect(() => {\n    doGetAnalytics().subscribe(result => {\n      setAllPositiveNegativeChart(getAllPostiveNegativeChartDetails(result));\n      setAllHomeQuarantineAdmitChart(getAllHomeQuarantineAdmitChartDetails(result));\n      setPincodePositiveNegativeDistributionChart(getPincodePositiveNegativeDistributionChartDetails(result));\n      setPincodeHomeQuarantineAdmissionDistributionChart(getPincodeHomeQuarantineAdmissionDistributionChartDetails(result));\n    }, error => {\n      appNotification.showError(error);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    className: classes.mt40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.paperWhite,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, \"Dashboard\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 33\n    }\n  }, \"Test Positive/Negative Distribution\"), /*#__PURE__*/React.createElement(Doughnut, {\n    data: allPositiveNegativeChart,\n    options: pieOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, \"Test Home Quarantine/Admission  Distribution\"), /*#__PURE__*/React.createElement(Doughnut, {\n    data: allHomeQuarantineAdmitChart,\n    options: pieOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.formContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"Test Positive/Negative - Pincode based   Distribution\"), /*#__PURE__*/React.createElement(Bar, {\n    data: pincodePositiveNegativeDistributionChart,\n    options: pincodeDistributionOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \" Home Quarantine/Admission - Pincode based   Distribution\"), /*#__PURE__*/React.createElement(Bar, {\n    data: pincodeHomeQuarantineAdmissionDistributionChart,\n    options: pincodeDistributionOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nexport default AuthorityDashboard;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/authority/AuthorityDashboard.js"],"names":["Container","Grid","React","Typography","useState","appNotification","doGetAnalytics","Bar","Doughnut","useGlobalStyles","getAllHomeQuarantineAdmitChartDetails","getAllPostiveNegativeChartDetails","getPincodeHomeQuarantineAdmissionDistributionChartDetails","getPincodePositiveNegativeDistributionChartDetails","useEffect","pieOptions","tooltips","mode","intersect","responsive","plugins","datalabels","color","pincodeDistributionOptions","display","scales","xAxes","stacked","scaleLabel","labelString","yAxes","AuthorityDashboard","classes","allPositiveNegativeChart","setAllPositiveNegativeChart","allHomeQuarantineAdmitChart","setAllHomeQuarantineAdmitChart","pincodePositiveNegativeDistributionChart","setPincodePositiveNegativeDistributionChart","pincodeHomeQuarantineAdmissionDistributionChart","setPincodeHomeQuarantineAdmissionDistributionChart","subscribe","result","error","showError","mt40","paperWhite","formContainer"],"mappings":"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","sourcesContent":["import {Container, Grid, React, Typography, useState} from \"../component\"\r\nimport 'chartjs-plugin-datalabels'\r\nimport {appNotification} from \"../shared/notification/app-notification\";\r\nimport {doGetAnalytics} from \"./shared/authorityDispatcher\";\r\nimport {Bar, Doughnut} from 'react-chartjs-2';\r\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\r\nimport {\r\n    getAllHomeQuarantineAdmitChartDetails,\r\n    getAllPostiveNegativeChartDetails,\r\n    getPincodeHomeQuarantineAdmissionDistributionChartDetails,\r\n    getPincodePositiveNegativeDistributionChartDetails\r\n} from \"./shared/dashboard-charts\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\nconst pieOptions =  {\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n        datalabels: {\r\n            color: '#ffffff'\r\n        }\r\n    }\r\n\r\n};\r\n\r\nconst pincodeDistributionOptions =  {\r\n    tooltips: {\r\n        mode: 'index',\r\n        intersect: false\r\n    },\r\n    responsive: true,\r\n    plugins: {\r\n        datalabels: {\r\n            display:false,\r\n            color: '#ffffff'\r\n        }\r\n    },\r\n    scales: {\r\n        xAxes: [{\r\n            stacked: true,\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: 'Pincode'\r\n            }\r\n        }],\r\n        yAxes: [{\r\n            stacked: true,\r\n            scaleLabel: {\r\n                display: true,\r\n                labelString: 'Count'\r\n            }\r\n        }]\r\n    }\r\n}\r\n\r\n\r\nfunction AuthorityDashboard() {\r\n\r\n    const classes = useGlobalStyles();\r\n\r\n\r\n     const [allPositiveNegativeChart, setAllPositiveNegativeChart] = useState({});\r\n    const [allHomeQuarantineAdmitChart, setAllHomeQuarantineAdmitChart] = useState({});\r\n    const [pincodePositiveNegativeDistributionChart, setPincodePositiveNegativeDistributionChart] = useState({});\r\n    const [pincodeHomeQuarantineAdmissionDistributionChart, setPincodeHomeQuarantineAdmissionDistributionChart] = useState({});\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        doGetAnalytics()\r\n            .subscribe((result) => {\r\n\r\n\r\n                setAllPositiveNegativeChart(getAllPostiveNegativeChartDetails(result))\r\n                setAllHomeQuarantineAdmitChart(getAllHomeQuarantineAdmitChartDetails(result))\r\n                setPincodePositiveNegativeDistributionChart(getPincodePositiveNegativeDistributionChartDetails(result))\r\n                setPincodeHomeQuarantineAdmissionDistributionChart(getPincodeHomeQuarantineAdmissionDistributionChartDetails(result))\r\n            }, (error => {\r\n\r\n\r\n                appNotification.showError(error)\r\n            }))\r\n\r\n\r\n\r\n\r\n\r\n    }, [])\r\n\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Container component=\"main\" className={classes.mt40}>\r\n\r\n\r\n                <Grid container spacing={2}  className={classes.paperWhite} >\r\n\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Dashboard\r\n                        <hr />\r\n                    </Typography>\r\n                    <Grid container spacing={2}  className={classes.formContainer} >\r\n\r\n                        <Grid item xs={6} >\r\n                            <div>\r\n                                <h2>Test Positive/Negative Distribution</h2>\r\n                                <Doughnut data={allPositiveNegativeChart} options={pieOptions} />\r\n                            </div>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={6} >\r\n\r\n                            <h2>Test Home Quarantine/Admission  Distribution</h2>\r\n                            <Doughnut data={allHomeQuarantineAdmitChart} options={pieOptions} />\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Grid container spacing={2}  className={classes.formContainer} >\r\n\r\n                        <Grid item xs={6} >\r\n                            <h2>Test Positive/Negative - Pincode based   Distribution</h2>\r\n                            <Bar data={pincodePositiveNegativeDistributionChart} options={pincodeDistributionOptions} />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={6} >\r\n\r\n                            <h2> Home Quarantine/Admission - Pincode based   Distribution</h2>\r\n                            <Bar data={pincodeHomeQuarantineAdmissionDistributionChart} options={pincodeDistributionOptions} />\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n\r\n                </Grid>\r\n\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default AuthorityDashboard\r\n"]},"metadata":{},"sourceType":"module"}