{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/testrequests/UserHistory.js\";\nimport { Button, makeStyles, React, useState } from \"../component\";\nimport { doGetMyTestRequests } from \"./testRequestDispatcher\";\nimport RequestHistory from \"./RequestHistory\";\nimport { Fragment } from \"react\";\n\nfunction UserHistory() {\n  const [requests, setRequests] = useState([]);\n\n  function getResult(dataIndex) {\n    const currentRequest = requests[dataIndex];\n\n    if (currentRequest && currentRequest.labResult && currentRequest.labResult.result) {\n      return currentRequest.labResult.result;\n    } else {\n      return \"\";\n    }\n  }\n\n  function getSuggestion(dataIndex) {\n    const currentRequest = requests[dataIndex];\n\n    if (currentRequest && currentRequest.consultation && currentRequest.consultation.suggestion) {\n      return currentRequest.consultation.suggestion;\n    } else {\n      return \"\";\n    }\n  }\n\n  const actionColumns = [{\n    name: 'Result',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        const result = getResult(dataIndex);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: result,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 28\n          }\n        }, result);\n      }\n    }\n  }, {\n    name: 'Doctor Suggestion',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        const result = getSuggestion(dataIndex);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: result,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 24\n          }\n        }, result);\n      }\n    }\n  }];\n  return /*#__PURE__*/React.createElement(RequestHistory, {\n    onDataLoaded: results => {\n      setRequests(results);\n    },\n    actionColumns: actionColumns,\n    getMyHistory: doGetMyTestRequests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default UserHistory;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/testrequests/UserHistory.js"],"names":["Button","makeStyles","React","useState","doGetMyTestRequests","RequestHistory","Fragment","UserHistory","requests","setRequests","getResult","dataIndex","currentRequest","labResult","result","getSuggestion","consultation","suggestion","actionColumns","name","options","filter","sort","empty","customBodyRenderLite","results"],"mappings":";AAAA,SAAQA,MAAR,EAAgBC,UAAhB,EAA4BC,KAA5B,EAAmCC,QAAnC,QAAmD,cAAnD;AACA,SAAQC,mBAAR,QAAkC,yBAAlC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,QAAR,QAAuB,OAAvB;;AAGA,SAASC,WAAT,GAAuB;AAGnB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASO,SAAT,CAAmBC,SAAnB,EAA6B;AACzB,UAAMC,cAAc,GAAGJ,QAAQ,CAACG,SAAD,CAA/B;;AACA,QAAGC,cAAc,IAAIA,cAAc,CAACC,SAAjC,IAA8CD,cAAc,CAACC,SAAf,CAAyBC,MAA1E,EAAiF;AAC7E,aAAOF,cAAc,CAACC,SAAf,CAAyBC,MAAhC;AAEH,KAHD,MAGM;AACF,aAAO,EAAP;AACH;AAGJ;;AACD,WAASC,aAAT,CAAuBJ,SAAvB,EAAiC;AAC7B,UAAMC,cAAc,GAAGJ,QAAQ,CAACG,SAAD,CAA/B;;AACA,QAAGC,cAAc,IAAIA,cAAc,CAACI,YAAjC,IAAiDJ,cAAc,CAACI,YAAf,CAA4BC,UAAhF,EAA2F;AACvF,aAAOL,cAAc,CAACI,YAAf,CAA4BC,UAAnC;AAEH,KAHD,MAGM;AACF,aAAO,EAAP;AACH;AAGJ;;AAID,QAAMC,aAAa,GAAE,CAAC;AAClBC,IAAAA,IAAI,EAAE,QADY;AAElBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,KAAK,EAAE,IAHF;AAILC,MAAAA,oBAAoB,EAAGb,SAAD,IAAe;AAGjC,cAAMG,MAAM,GAAGJ,SAAS,CAACC,SAAD,CAAxB;AACI,4BAAO;AAAK,UAAA,SAAS,EAAEG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFA,MADE,CAAP;AAQP;AAhBI;AAFS,GAAD,EAoBnB;AACEK,IAAAA,IAAI,EAAE,mBADR;AAEEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,KADH;AAELC,MAAAA,IAAI,EAAE,KAFD;AAGLC,MAAAA,KAAK,EAAE,IAHF;AAILC,MAAAA,oBAAoB,EAAGb,SAAD,IAAe;AAGjC,cAAMG,MAAM,GAAGC,aAAa,CAACJ,SAAD,CAA5B;AACA,4BAAO;AAAK,UAAA,SAAS,EAAEG,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACFA,MADE,CAAP;AAMH;AAdI;AAFX,GApBmB,CAArB;AAyCA,sBACI,oBAAC,cAAD;AAAgB,IAAA,YAAY,EAAIW,OAAD,IAAa;AACxChB,MAAAA,WAAW,CAACgB,OAAD,CAAX;AACH,KAFD;AAEG,IAAA,aAAa,EAAEP,aAFlB;AAEiC,IAAA,YAAY,EAAEd,mBAF/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAQH;;AAED,eAAeG,WAAf","sourcesContent":["import {Button, makeStyles, React, useState,} from \"../component\"\nimport {doGetMyTestRequests} from \"./testRequestDispatcher\";\nimport RequestHistory from \"./RequestHistory\";\nimport {Fragment} from \"react\";\n\n\nfunction UserHistory() {\n\n\n    const [requests, setRequests] = useState([]);\n\n    function getResult(dataIndex){\n        const currentRequest = requests[dataIndex]\n        if(currentRequest && currentRequest.labResult && currentRequest.labResult.result){\n            return currentRequest.labResult.result\n\n        }else {\n            return \"\"\n        }\n\n\n    }\n    function getSuggestion(dataIndex){\n        const currentRequest = requests[dataIndex]\n        if(currentRequest && currentRequest.consultation && currentRequest.consultation.suggestion){\n            return currentRequest.consultation.suggestion\n\n        }else {\n            return \"\"\n        }\n\n\n    }\n\n\n\n    const actionColumns =[{\n        name: 'Result',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n\n                const result = getResult(dataIndex)\n                    return <div className={result}>\n                        {result}\n                        </div>\n\n\n\n\n\n            },\n        }\n    },{\n        name: 'Doctor Suggestion',\n        options: {\n            filter: false,\n            sort: false,\n            empty: true,\n            customBodyRenderLite: (dataIndex) => {\n\n\n                const result = getSuggestion(dataIndex)\n                return <div className={result}>\n                    {result}\n                </div>\n\n\n\n            },\n        }\n    },]\n\n\n    return (\n        <RequestHistory onDataLoaded ={(results) => {\n            setRequests(results)\n        }} actionColumns={actionColumns} getMyHistory={doGetMyTestRequests} ></RequestHistory>\n\n    )\n\n\n}\n\nexport default UserHistory\n"]},"metadata":{},"sourceType":"module"}