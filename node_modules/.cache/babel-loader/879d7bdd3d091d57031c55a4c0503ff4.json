{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/shared/notification/app-notification-component.js\";\nimport React, { Component, Fragment } from 'react';\nimport { appNotification } from \"./app-notification\";\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nconst TEN_SECONDS = 10 * 1000;\n\nclass AppNotificationComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"show\": false,\n      \"title\": '',\n      \"variant\": '',\n      \"message\": ''\n    };\n  }\n\n  componentDidMount() {\n    this.subscription = appNotification.onChange().subscribe(res => {\n      this.onNotificationReceived(res);\n    });\n  }\n\n  onNotificationReceived(res) {\n    console.log(\"showing\");\n    this.setState({\n      \"show\": true,\n      \"title\": res.title,\n      \"variant\": res.variant,\n      \"message\": res.message\n    });\n    this.resetAfterTenSeconds();\n  }\n\n  componentWillUnmount() {\n    this.subscription.unsubscribe();\n  }\n\n  reset() {\n    this.setState({\n      \"show\": false,\n      \"title\": '',\n      \"variant\": '',\n      \"message\": ''\n    });\n  }\n\n  resetAfterTenSeconds() {\n    setTimeout(() => {\n      this.reset();\n    }, TEN_SECONDS);\n  }\n\n  render() {\n    const {\n      show,\n      title,\n      message,\n      variant\n    } = this.state;\n    if (!show) return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }\n    });\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Snackbar, {\n      open: show,\n      autoHideDuration: 26000,\n      onClose: () => {\n        this.reset();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: () => {\n        this.reset();\n      },\n      severity: variant,\n      action: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        size: \"small\",\n        onClick: () => {\n          this.reset();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(CloseIcon, {\n        fontSize: \"inherit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AlertTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, title), message)));\n  }\n\n}\n\nexport default AppNotificationComponent;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/shared/notification/app-notification-component.js"],"names":["React","Component","Fragment","appNotification","AlertTitle","Alert","IconButton","CloseIcon","Snackbar","TEN_SECONDS","AppNotificationComponent","constructor","props","state","componentDidMount","subscription","onChange","subscribe","res","onNotificationReceived","console","log","setState","title","variant","message","resetAfterTenSeconds","componentWillUnmount","unsubscribe","reset","setTimeout","render","show"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from 'react';\r\nimport {appNotification} from \"./app-notification\";\r\nimport AlertTitle from \"@material-ui/lab/AlertTitle\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst TEN_SECONDS =  10  * 1000\r\n\r\n\r\nclass AppNotificationComponent extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"show\": false,\r\n            \"title\": '',\r\n            \"variant\": '',\r\n            \"message\": '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.subscription = appNotification.onChange().subscribe(res => {\r\n            this.onNotificationReceived(res);\r\n        })\r\n    }\r\n\r\n    onNotificationReceived(res) {\r\n\r\n\r\n        console.log(\"showing\")\r\n\r\n            this.setState({\r\n                \"show\": true,\r\n                \"title\": res.title,\r\n                \"variant\": res.variant,\r\n                \"message\": res.message\r\n            });\r\n            this.resetAfterTenSeconds()\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.subscription.unsubscribe();\r\n    }\r\n\r\n    reset() {\r\n\r\n        this.setState({\r\n            \"show\": false,\r\n            \"title\": '',\r\n            \"variant\": '',\r\n            \"message\": '',\r\n        });\r\n    }\r\n\r\n    resetAfterTenSeconds() {\r\n        setTimeout(() => {\r\n            this.reset();\r\n        }, TEN_SECONDS)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {show, title, message, variant} = this.state\r\n\r\n        if(!show)\r\n            return <Fragment></Fragment>\r\n\r\n        return <Fragment>\r\n            <Snackbar open={show} autoHideDuration={26000} onClose={() => {\r\n                this.reset()\r\n            }}>\r\n                <Alert onClose={() => {\r\n                    this.reset()\r\n                }} severity={variant}  action={\r\n                    <IconButton\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        onClick={() => {\r\n                            this.reset()\r\n                        }}\r\n                    >\r\n                        <CloseIcon fontSize=\"inherit\" />\r\n                    </IconButton>\r\n                }\r\n                >\r\n                    <AlertTitle>{title}</AlertTitle>\r\n                    {message}\r\n\r\n                </Alert>\r\n            </Snackbar>\r\n        </Fragment>\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default AppNotificationComponent;\r\n"]},"metadata":{},"sourceType":"module"}