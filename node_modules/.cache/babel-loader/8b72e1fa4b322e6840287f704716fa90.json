{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/testrequests/RequestTest.js\";\nimport { Button, Container, FormControl, Grid, makeStyles, React, TextField, Typography, useHistory, useSelector, useState } from \"../component\";\nimport { appNotification } from \"../shared/notification/app-notification\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport { doCreateTestRequest } from \"./testRequestDispatcher\";\nimport { errorHandler } from \"../shared/common-helpers\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  select100: {\n    width: '100%'\n  },\n  select100Form: {\n    width: '100%'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nfunction RequestTest() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [forMe, setForMe] = useState(false);\n  const [name, setName] = useState('');\n  const [address, setAddress] = useState('');\n  const [age, setAge] = useState('');\n  const [email, setEmail] = useState('');\n  const [gender, setGender] = useState('');\n  const [shrink, setShrink] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [pinCode, setPinCode] = useState(''); // const [name, setName] = useState('user');\n  // const [address, setAddress] = useState('some address ,some day');\n  // const [age, setAge] = useState('25')\n  // const [email, setEmail] = useState('user@upgrad.com');\n  // const [gender, setGender] = useState(\"MALE\");\n  // const [phoneNumber,setPhoneNumber] = useState(\"45454545\");\n  // const [pinCode, setPinCode] = useState('45787878');\n\n  const [isAgreed, setIsAgreed] = useState(false);\n  const {\n    user\n  } = useSelector(state => state.auth);\n\n  function toggleTestForMe() {\n    const toggledState = !forMe;\n    setForMe(toggledState);\n\n    if (toggledState) {\n      console.log(user);\n      setName(user.firstName);\n      setAddress(user.address);\n      setAge(user.age);\n      setEmail(user.email);\n      setGender(user.gender);\n      setPhoneNumber(user.phoneNumber);\n      setPinCode(user.pinCode);\n      setShrink(true);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const payload = {\n      name,\n      gender,\n      address,\n      age,\n      email,\n      phoneNumber,\n      pinCode\n    };\n    console.log(payload);\n    doCreateTestRequest(payload).subscribe(response => {\n      console.log(\"doCreateTestRequest\", response);\n      appNotification.showSuccess(\"Test Request Created\");\n      history.push(\"/user-history\");\n    }, errorHandler);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Request For Test\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.select100Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-testfor-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 37\n    }\n  }, \"Test For\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: forMe,\n    onChange: e => toggleTestForMe(),\n    label: \"Test For\",\n    className: classes.select100,\n    inputProps: {\n      name: 'testfor',\n      id: 'select-test-for-me'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, \"Myself\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"false\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 41\n    }\n  }, \"Other\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: name,\n    onInput: e => setName(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"name\",\n    label: \"Name\",\n    name: \"name\",\n    autoComplete: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    className: classes.select100Form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-gender-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 37\n    }\n  }, \"Gender\"), /*#__PURE__*/React.createElement(Select, {\n    className: classes.select100,\n    native: true,\n    value: gender,\n    onChange: e => setGender(e.target.value),\n    label: \"Gender\",\n    inputProps: {\n      name: 'gender',\n      id: 'select-gender'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"FEMALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 41\n    }\n  }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"MALE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 41\n    }\n  }, \"Male\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"OTHER\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 41\n    }\n  }, \"Other\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: age,\n    onInput: e => setAge(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"age\",\n    label: \"age\",\n    type: \"number\",\n    id: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: email,\n    onInput: e => setEmail(e.target.value),\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Email Address\",\n    name: \"email\",\n    autoComplete: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: phoneNumber,\n    onInput: e => setPhoneNumber(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"mobile\",\n    label: \"Mobile No.\",\n    type: \"number\",\n    id: \"mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: address,\n    onInput: e => setAddress(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"address\",\n    label: \"Address\",\n    type: \"text\",\n    id: \"address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    value: pinCode,\n    onInput: e => setPinCode(e.target.value),\n    required: true,\n    fullWidth: true,\n    name: \"pinCode\",\n    label: \"pinCode\",\n    type: \"text\",\n    id: \"pinCode\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, \"Create Test Request\")))));\n}\n\nexport default RequestTest;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/testrequests/RequestTest.js"],"names":["Button","Container","FormControl","Grid","makeStyles","React","TextField","Typography","useHistory","useSelector","useState","appNotification","InputLabel","Select","doCreateTestRequest","errorHandler","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","select100","width","select100Form","formControl","margin","minWidth","selectEmpty","form","submit","RequestTest","classes","history","forMe","setForMe","name","setName","address","setAddress","age","setAge","email","setEmail","gender","setGender","shrink","setShrink","phoneNumber","setPhoneNumber","pinCode","setPinCode","isAgreed","setIsAgreed","user","state","auth","toggleTestForMe","toggledState","console","log","firstName","handleSubmit","event","preventDefault","payload","subscribe","response","showSuccess","push","e","id","target","value"],"mappings":"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","sourcesContent":["import {\n    Button,\n    Container,\n    FormControl,\n    Grid,\n    makeStyles,\n    React,\n    TextField,\n    Typography,\n    useHistory,\n    useSelector,\n    useState\n} from \"../component\"\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport {doCreateTestRequest} from \"./testRequestDispatcher\";\nimport {errorHandler} from \"../shared/common-helpers\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    select100:{\n        width: '100%',\n    },\n    select100Form:{\n        width: '100%',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction RequestTest() {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [forMe,setForMe] = useState(false);\n\n    const [name, setName] = useState('');\n    const [address, setAddress] = useState('');\n    const [age, setAge] = useState('')\n    const [email, setEmail] = useState('');\n    const [gender, setGender] = useState('');\n    const [shrink, setShrink] = useState(false);\n    const [phoneNumber,setPhoneNumber] = useState(\"\");\n    const [pinCode, setPinCode] = useState('');\n    // const [name, setName] = useState('user');\n    // const [address, setAddress] = useState('some address ,some day');\n    // const [age, setAge] = useState('25')\n    // const [email, setEmail] = useState('user@upgrad.com');\n    // const [gender, setGender] = useState(\"MALE\");\n    // const [phoneNumber,setPhoneNumber] = useState(\"45454545\");\n    // const [pinCode, setPinCode] = useState('45787878');\n    const [isAgreed, setIsAgreed] = useState(false);\n\n    const {user} = useSelector(state => state.auth);\n\n    function toggleTestForMe(){\n        const toggledState = !forMe\n        setForMe(toggledState)\n        if(toggledState){\n\n\n            console.log(user)\n            setName(user.firstName )\n           setAddress(user.address)\n            setAge(user.age)\n            setEmail(user.email)\n            setGender(user.gender)\n\n            setPhoneNumber(user.phoneNumber)\n            setPinCode(user.pinCode)\n            setShrink(true)\n\n        }\n    }\n\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const payload = {\n\n            name,\n            gender,\n            address,\n            age,\n            email,\n            phoneNumber,\n            pinCode\n\n\n        }\n        console.log(payload)\n\n        doCreateTestRequest(payload)\n            .subscribe((response) => {\n\n                console.log(\"doCreateTestRequest\",response)\n                appNotification.showSuccess(\"Test Request Created\")\n                history.push(\"/user-history\")\n            }, errorHandler)\n\n    }\n\n    return (\n        <React.Fragment>\n            <Container component=\"main\" maxWidth=\"xs\">\n\n                <div className={classes.paper}>\n\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Request For Test\n                        <hr />\n                    </Typography>\n\n\n                    <form className={classes.form} onSubmit={handleSubmit} noValidate>\n\n                        <Grid container spacing={2}>\n                            <Grid item xs={12} >\n\n\n                                <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                    <InputLabel htmlFor=\"outlined-testfor-native-simple\">Test For</InputLabel>\n                                    <Select\n                                        native\n                                        value={forMe}\n                                        onChange={e => toggleTestForMe()}\n                                        label=\"Test For\"\n                                        className={classes.select100}\n                                        inputProps={{\n                                            name: 'testfor',\n                                            id: 'select-test-for-me',\n                                        }}\n                                    >\n                                        <option value=\"true\">Myself</option>\n                                        <option value=\"false\">Other</option>\n                                    </Select>\n                                </FormControl>\n\n\n\n\n                            </Grid>\n\n                            <Grid item xs={12} sm={6}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={name}\n                                    onInput={e => setName(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"name\"\n                                    label=\"Name\"\n                                    name=\"name\"\n                                    autoComplete=\"name\"\n                                />\n                            </Grid>\n                            <Grid item xs={12} sm={6}>\n\n                                <FormControl variant=\"outlined\" className={classes.select100Form}>\n                                    <InputLabel htmlFor=\"outlined-gender-native-simple\">Gender</InputLabel>\n                                    <Select\n                                        className={classes.select100}\n                                        native\n                                        value={gender}\n                                        onChange={e => setGender(e.target.value)}\n                                        label=\"Gender\"\n                                        inputProps={{\n                                            name: 'gender',\n                                            id: 'select-gender',\n                                        }}\n                                    >\n                                        <option value=\"FEMALE\">Female</option>\n                                        <option value=\"MALE\">Male</option>\n                                        <option value=\"OTHER\">Other</option>\n                                    </Select>\n                                </FormControl>\n                            </Grid>\n\n\n\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={age}\n                                    onInput={e => setAge(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"age\"\n                                    label=\"age\"\n                                    type=\"number\"\n                                    id=\"age\"\n                                />\n                            </Grid>\n\n\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={email}\n                                    onInput={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                    id=\"email\"\n                                    label=\"Email Address\"\n                                    name=\"email\"\n                                    autoComplete=\"email\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={phoneNumber}\n                                    onInput={e => setPhoneNumber(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"mobile\"\n                                    label=\"Mobile No.\"\n                                    type=\"number\"\n                                    id=\"mobile\"\n                                />\n                            </Grid>\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={address}\n                                    onInput={e => setAddress(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"address\"\n                                    label=\"Address\"\n                                    type=\"text\"\n                                    id=\"address\"\n                                />\n                            </Grid>\n\n                            <Grid item xs={12}>\n                                <TextField\n                                    variant=\"outlined\"\n                                    value={pinCode}\n                                    onInput={e => setPinCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    name=\"pinCode\"\n                                    label=\"pinCode\"\n                                    type=\"text\"\n                                    id=\"pinCode\"\n                                />\n                            </Grid>\n                        </Grid>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Create Test Request\n                        </Button>\n                    </form>\n                </div>\n\n            </Container>\n        </React.Fragment>\n\n    )\n\n\n}\n\nexport default RequestTest\n"]},"metadata":{},"sourceType":"module"}