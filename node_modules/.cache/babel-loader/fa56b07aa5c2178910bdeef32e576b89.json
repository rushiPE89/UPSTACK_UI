{"ast":null,"code":"import { environment } from \"../../environment\";\nimport http from \"../../shared/services/http-service.js\";\nimport { concatMap, map } from \"rxjs/operators\";\nimport { parseApprovalItems } from \"./approval-parser\";\nimport { getAllDataWithPinCodes, mergeTestRequestsAndThresholdDetails } from \"./authority-data-parser\"; // export const userLogin = (payload) => {\n//     return {\n//         type: LOGIN,\n//         payload\n//     }\n// }\n//\n\nexport const doGetThresholdsUrl = environment.baseUrl + '/api/government/all-thresholds';\nexport const doGetAllTestRequestsUrl = environment.baseUrl + '/api/government/all-requests';\nexport const doGetPendingApprovalsUrl = environment.baseUrl + '/api/government/pending-approvals';\nexport const doUpdateAllThresholdsUrl = environment.baseUrl + '/api/government/update-thresholds';\nexport const downloadDocumentBaseUrl = environment.baseUrl + '/documents/download/';\nexport const updateApprovalUrl = environment.baseUrl + '/api/government/update-approval';\nexport const doGetThresholds = () => {\n  return http.get(doGetThresholdsUrl);\n};\nexport const doGetAllTestRequests = thresholds => {\n  return http.get(doGetAllTestRequestsUrl).pipe(map(items => {\n    return mergeTestRequestsAndThresholdDetails(items, thresholds);\n  }));\n};\nexport const doGetAllTestRequestsWithThreshold = () => {\n  return doGetThresholds().pipe(concatMap(thresholds => {\n    return doGetAllTestRequests(thresholds);\n  }));\n};\nexport const doGetAnalytics = () => {\n  return doGetThresholds().pipe(concatMap(thresholds => doGetAnalyticsFromThresholds(thresholds)));\n};\nexport const doGetAnalyticsFromThresholds = thresholds => {\n  return http.get(doGetAllTestRequestsUrl).pipe(map(items => getAllDataWithPinCodes(items, thresholds)));\n};\nexport const doGetPendingApprovals = () => {\n  return http.get(doGetPendingApprovalsUrl).pipe(map(items => parseApprovalItems(items)));\n};\nexport const doUpdateAllThresholds = allThresholds => {\n  // thresholdType  RED,YELLOW,GREEN\n  return http.post(doUpdateAllThresholdsUrl, allThresholds);\n};\nexport const downloadDocument = (id, fileName) => {\n  const url = downloadDocumentBaseUrl + id;\n  http.downloadFileFromServer(url, fileName);\n};\nexport function updateApproval(id, status) {\n  let request = {\n    \"status\": status,\n    \"userId\": id\n  };\n  return http.put(updateApprovalUrl, request);\n}\nexport const doApproveUser = id => {\n  return updateApproval(id, \"APPROVED\");\n};\nexport const doRejectUser = id => {\n  return updateApproval(id, \"REJECTED\");\n};","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/authority/shared/authorityDispatcher.js"],"names":["environment","http","concatMap","map","parseApprovalItems","getAllDataWithPinCodes","mergeTestRequestsAndThresholdDetails","doGetThresholdsUrl","baseUrl","doGetAllTestRequestsUrl","doGetPendingApprovalsUrl","doUpdateAllThresholdsUrl","downloadDocumentBaseUrl","updateApprovalUrl","doGetThresholds","get","doGetAllTestRequests","thresholds","pipe","items","doGetAllTestRequestsWithThreshold","doGetAnalytics","doGetAnalyticsFromThresholds","doGetPendingApprovals","doUpdateAllThresholds","allThresholds","post","downloadDocument","id","fileName","url","downloadFileFromServer","updateApproval","status","request","put","doApproveUser","doRejectUser"],"mappings":"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","sourcesContent":["import {environment} from \"../../environment\";\nimport http from \"../../shared/services/http-service.js\";\nimport {concatMap, map} from \"rxjs/operators\";\nimport {parseApprovalItems} from \"./approval-parser\";\nimport {getAllDataWithPinCodes, mergeTestRequestsAndThresholdDetails} from \"./authority-data-parser\";\n\n// export const userLogin = (payload) => {\n//     return {\n//         type: LOGIN,\n//         payload\n//     }\n// }\n//\n\n\nexport const doGetThresholdsUrl = environment.baseUrl + '/api/government/all-thresholds';\nexport const doGetAllTestRequestsUrl = environment.baseUrl + '/api/government/all-requests';\nexport const doGetPendingApprovalsUrl = environment.baseUrl + '/api/government/pending-approvals';\n\nexport const doUpdateAllThresholdsUrl = environment.baseUrl + '/api/government/update-thresholds';\n\nexport const downloadDocumentBaseUrl = environment.baseUrl + '/documents/download/';\nexport const updateApprovalUrl = environment.baseUrl + '/api/government/update-approval';\n\nexport const doGetThresholds = () => {\n\n\n    return http.get(doGetThresholdsUrl);\n}\nexport const doGetAllTestRequests = (thresholds) => {\n\n\n    return http.get(doGetAllTestRequestsUrl).pipe(\n        map((items) =>   {\n\n\n            return mergeTestRequestsAndThresholdDetails(items, thresholds);\n        })\n    );\n}\n\nexport const doGetAllTestRequestsWithThreshold = () => {\n\n\n    return doGetThresholds()\n        .pipe(\n            concatMap((thresholds) => {\n\n                return doGetAllTestRequests(thresholds)\n            }),\n        );\n\n\n}\nexport const doGetAnalytics = () => {\n\n\n    return doGetThresholds()\n        .pipe(\n            concatMap((thresholds) => doGetAnalyticsFromThresholds(thresholds)),\n        );\n\n\n}\n\nexport const doGetAnalyticsFromThresholds = (thresholds) => {\n\n\n    return http.get(doGetAllTestRequestsUrl).pipe(\n        map((items) =>   getAllDataWithPinCodes(items,thresholds))\n    );\n}\nexport const doGetPendingApprovals = () => {\n\n    return http.get(doGetPendingApprovalsUrl).pipe(\n        map((items) =>   parseApprovalItems(items))\n    );\n}\n\nexport const doUpdateAllThresholds = (allThresholds) => {\n// thresholdType  RED,YELLOW,GREEN\n\n    return http.post(doUpdateAllThresholdsUrl, allThresholds);\n\n\n}\n\nexport const downloadDocument = (id,fileName) => {\n\n    const url = downloadDocumentBaseUrl + id;\n\n     http.downloadFileFromServer(url,fileName);\n\n\n}\n\n\nexport function updateApproval(id, status) {\n    let request = {\n        \"status\": status,\n        \"userId\": id\n    }\n\n\n\n    return http.put(updateApprovalUrl, request);\n}\n\nexport const doApproveUser = (id) => {\n\n    return updateApproval(id, \"APPROVED\");\n\n\n}\n\nexport const doRejectUser = (id) => {\n    return updateApproval(id, \"REJECTED\");\n\n}\n\n"]},"metadata":{},"sourceType":"module"}