{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/component/Navbar.js\";\nimport { AppBar, Button, Link, React, Toolbar, Typography, useDispatch, useHistory, useSelector } from \"./index\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport upgrad_logo from \"../upgrad.png\";\nimport { useLocation } from 'react-router-dom';\nimport { doLogout } from \"../auth/authDispatcher\";\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: '#e6e6e6'\n    },\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none'\n    }\n  },\n  appBar: {\n    borderBottom: `3px solid ${theme.palette.divider}`\n  },\n  toolbar: {\n    flexWrap: 'wrap'\n  },\n  toolbarTitle: {\n    flexGrow: 1\n  },\n  link: {\n    margin: theme.spacing(1, 1.5)\n  },\n  activeLink: {\n    margin: theme.spacing(1, 1.5),\n    backgroundColor: \"#3f51b5\",\n    color: \"#ffffff\",\n    '&:hover': {\n      color: \"#3f51b5\",\n      backgroundColor: \"#ffffff\",\n      border: '1px solid #3f51b5'\n    }\n  }\n}));\n\nfunction Navbar(props) {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const location = useLocation();\n\n  function logout() {\n    doLogout(dispatch, history);\n  }\n\n  const classes = useStyles();\n  const {\n    user,\n    token,\n    isLoggedIn,\n    roles\n  } = useSelector(state => state.auth);\n  let {\n    isUser,\n    isDoctor,\n    isAuthority,\n    isTester,\n    isApproved\n  } = roles;\n  const isNotAuthority = isLoggedIn == true && isAuthority == false;\n  const isNotLoggedIn = !isLoggedIn;\n  const allMenus = [{\n    url: \"/dashboard\",\n    label: \"Dashboard\",\n    rule: isAuthority\n  }, {\n    url: \"/profile\",\n    label: \"Profile\",\n    rule: isLoggedIn\n  }, {\n    url: \"/request-test\",\n    label: \"Request Test\",\n    rule: isUser\n  }, {\n    url: \"/user-history\",\n    label: \"Request History\",\n    rule: isUser\n  }, {\n    url: \"/lab-history\",\n    label: \"Request History\",\n    rule: isTester\n  }, {\n    url: \"/consultation-history\",\n    label: \"Request History\",\n    rule: isDoctor\n  }, {\n    url: \"/pending-lab-tests\",\n    label: \"Tests Requested\",\n    rule: isTester\n  }, {\n    url: \"/pending-consultations\",\n    label: \"Consultations Requested\",\n    rule: isDoctor\n  }, {\n    url: \"/update-thresholds\",\n    label: \"Settings\",\n    rule: isAuthority\n  }, {\n    url: \"/pending-user-approvals\",\n    label: \"Approve Users\",\n    rule: isAuthority\n  }, {\n    url: \"/view-all-requests\",\n    label: \"All Requests\",\n    rule: isAuthority\n  }];\n  const currentPath = location.pathname;\n  const menusToBeDisplayed = allMenus.filter(value => value.rule).map(item => {\n    const menuClassName = item.url == currentPath ? classes.activeLink : classes.link;\n    return { ...item,\n      menuClassName\n    };\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"static\",\n    color: \"default\",\n    elevation: 0,\n    className: classes.appBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: upgrad_logo,\n    height: \"30\",\n    alt: \"Upgrad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"inherit\",\n    noWrap: true,\n    className: classes.toolbarTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"\\xA0\", /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    variant: \"text\",\n    to: \"/\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, \"Upgrad Labs\")), /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, menusToBeDisplayed.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: index,\n      component: Link,\n      variant: \"text\",\n      color: \"primary\",\n      to: item.url,\n      className: item.menuClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, item.label);\n  })), isLoggedIn ? /*#__PURE__*/React.createElement(Button, {\n    id: \"btnlogout\",\n    onClick: logout,\n    color: \"secondary\",\n    variant: \"outlined\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 25\n    }\n  }, \"Logout\") : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/login\",\n    color: \"secondary\",\n    variant: \"outlined\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    component: Link,\n    to: \"/register\",\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.link,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 29\n    }\n  }, \"Register for test\")))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/component/Navbar.js"],"names":["AppBar","Button","Link","React","Toolbar","Typography","useDispatch","useHistory","useSelector","makeStyles","upgrad_logo","useLocation","doLogout","useStyles","theme","body","backgroundColor","ul","margin","padding","listStyle","appBar","borderBottom","palette","divider","toolbar","flexWrap","toolbarTitle","flexGrow","link","spacing","activeLink","color","border","Navbar","props","dispatch","history","location","logout","classes","user","token","isLoggedIn","roles","state","auth","isUser","isDoctor","isAuthority","isTester","isApproved","isNotAuthority","isNotLoggedIn","allMenus","url","label","rule","currentPath","pathname","menusToBeDisplayed","filter","value","map","item","menuClassName","index"],"mappings":"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","sourcesContent":["import {AppBar, Button, Link, React, Toolbar, Typography, useDispatch, useHistory, useSelector,} from \"./index\"\nimport {makeStyles} from '@material-ui/core/styles';\nimport upgrad_logo from \"../upgrad.png\"\nimport {useLocation} from 'react-router-dom';\nimport {doLogout} from \"../auth/authDispatcher\";\n\n\nconst useStyles = makeStyles((theme) => ({\n\n    '@global': {\n        body: {\n            backgroundColor: '#e6e6e6'\n        },\n        ul: {\n            margin: 0,\n            padding: 0,\n            listStyle: 'none',\n        },\n    },\n    appBar: {\n        borderBottom: `3px solid ${theme.palette.divider}`,\n    },\n    toolbar: {\n        flexWrap: 'wrap',\n    },\n    toolbarTitle: {\n        flexGrow: 1,\n    },\n    link: {\n        margin: theme.spacing(1, 1.5),\n    },\n    activeLink: {\n        margin: theme.spacing(1, 1.5),\n        backgroundColor: \"#3f51b5\",\n        color: \"#ffffff\",\n        '&:hover': {\n            color: \"#3f51b5\",\n            backgroundColor: \"#ffffff\",\n            border:'1px solid #3f51b5'\n        },\n    },\n\n\n}));\n\n\nfunction Navbar(props) {\n\n    const dispatch = useDispatch()\n    const history = useHistory();\nconst location =useLocation();\n\n    function logout() {\n\n        doLogout(dispatch, history)\n\n\n    }\n\n    const classes = useStyles();\n    const {user, token, isLoggedIn, roles} = useSelector(state => state.auth);\n\n    let {isUser, isDoctor, isAuthority, isTester,isApproved} = roles\n\n    const isNotAuthority = (isLoggedIn == true) && (isAuthority == false);\n    const isNotLoggedIn = !isLoggedIn\n\n\n\n\n    const allMenus = [\n        {url: \"/dashboard\", label: \"Dashboard\", rule: isAuthority},\n        {url: \"/profile\", label: \"Profile\", rule: isLoggedIn},\n         {url: \"/request-test\", label: \"Request Test\", rule: isUser},\n        {url: \"/user-history\", label: \"Request History\", rule: isUser},\n        {url: \"/lab-history\", label: \"Request History\", rule: isTester},\n        {url: \"/consultation-history\", label: \"Request History\", rule: isDoctor},\n        {url: \"/pending-lab-tests\", label: \"Tests Requested\", rule: isTester},\n        {url: \"/pending-consultations\", label: \"Consultations Requested\", rule: isDoctor},\n        {url: \"/update-thresholds\", label: \"Settings\", rule: isAuthority},\n        {url: \"/pending-user-approvals\", label: \"Approve Users\", rule: isAuthority},\n        {url: \"/view-all-requests\", label: \"All Requests\", rule: isAuthority}\n    ];\n\n    const currentPath =location.pathname\n\n\n    const menusToBeDisplayed = allMenus.filter(value => value.rule).map(item=>{\n\n        const menuClassName = (item.url == currentPath)? classes.activeLink:classes.link;\n        return {...item, menuClassName}\n\n    })\n\n\n    return (\n        <React.Fragment>\n\n            <AppBar position=\"static\" color=\"default\" elevation={0} className={classes.appBar}>\n                <Toolbar className={classes.toolbar}>\n\n                    <img src={upgrad_logo} height=\"30\" alt=\"Upgrad\"/>\n\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle}>\n                        &nbsp;\n\n                        <Button component={Link} variant=\"text\" to=\"/\" className={classes.link}>\n\n                            Upgrad Labs\n                        </Button>\n                    </Typography>\n\n\n                    <nav>\n\n                        {menusToBeDisplayed.map((item, index) => {\n                            return (\n                                <Button key={index} component={Link} variant=\"text\" color=\"primary\" to={item.url}\n                                        className={item.menuClassName}>\n                                    {item.label}\n                                </Button>);\n\n\n                        })}\n\n\n                    </nav>\n\n\n                    {(isLoggedIn) ?\n                        <Button id=\"btnlogout\" onClick={logout} color=\"secondary\" variant=\"outlined\" className={classes.link}>\n                            Logout\n                        </Button> : <div>\n                            <Button component={Link} to=\"/login\" color=\"secondary\" variant=\"outlined\"\n                                    className={classes.link}>\n                                Login\n                            </Button>\n                            <Button component={Link} to=\"/register\" color=\"primary\" variant=\"outlined\"\n                                    className={classes.link}>\n                                Register for test\n                            </Button></div>\n                    }\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n\n    )\n}\n\n\nexport default Navbar\n"]},"metadata":{},"sourceType":"module"}