{"ast":null,"code":"var _jsxFileName = \"/Users/rushikeshkhadsare/Downloads/upstac-ui/src/consultation/PendingConsultations.js\";\nimport { Container, Grid, makeStyles, React, useEffect, useHistory, useState } from \"../component\";\nimport MUIDataTable from \"mui-datatables\";\nimport { appNotification } from \"../shared/notification/app-notification\";\nimport { doAssignConsultation, doGetPendingConsultations } from \"./consultationDispatcher\";\nimport { confirmMessageService } from \"../shared/confirm/confirm-message-service\";\nimport Button from '@material-ui/core/Button';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport { useDispatch } from \"react-redux\";\nimport { errorHandler } from \"../shared/common-helpers\";\nimport { useGlobalStyles } from \"../styles/GlobalStyles\";\n\nfunction PendingConsultations() {\n  const classes = useGlobalStyles();\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const [requests, setRequests] = useState([]);\n  const columns = [{\n    name: \"Request ID\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Name\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Age\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: \"Status\",\n    options: {\n      filter: true\n    }\n  }, {\n    name: 'Actions',\n    options: {\n      filter: false,\n      sort: false,\n      empty: true,\n      customBodyRenderLite: dataIndex => {\n        return /*#__PURE__*/React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          className: classes.button,\n          startIcon: /*#__PURE__*/React.createElement(AssignmentIndIcon, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 36\n            }\n          }),\n          onClick: () => {\n            onAssignToMeClicked(dataIndex);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 28\n          }\n        }, \"Assign to Me\");\n      }\n    }\n  }];\n  const options = {\n    filter: true,\n    filterType: 'dropdown',\n    responsive: 'standard',\n    selectableRows: 'none'\n  };\n\n  async function onAssignToMeClicked(index) {\n    const pendingRequest = requests[index];\n    await confirmMessageService.show(\"Do you want to Assign yourself for Consultaion \" + pendingRequest.name + \"?\");\n    doAssignConsultation(pendingRequest.requestId).subscribe(res => {\n      appNotification.showSuccess(\"Request Assigned to you, Please update your diagnosis details.\");\n      history.push(\"/update-consultation/\" + pendingRequest.requestId);\n    }, errorHandler);\n  }\n\n  function reloadPendingConsultations() {\n    doGetPendingConsultations().subscribe(pendingConsultations => {\n      setRequests(pendingConsultations);\n      const buffer = pendingConsultations.map(item => {\n        const {\n          result\n        } = item.labResult;\n        return [item.requestId, item.name, item.age, result];\n      });\n      const results = [];\n      results.push(buffer);\n      setData(buffer);\n    }, errorHandler);\n  }\n\n  useEffect(() => {\n    reloadPendingConsultations();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"md\",\n    component: \"main\",\n    className: classes.heroContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }\n  }, \"Pending Consultations\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(MUIDataTable, {\n    title: \"Pending Consultations\",\n    data: data,\n    columns: columns,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default PendingConsultations;","map":{"version":3,"sources":["/Users/rushikeshkhadsare/Downloads/upstac-ui/src/consultation/PendingConsultations.js"],"names":["Container","Grid","makeStyles","React","useEffect","useHistory","useState","MUIDataTable","appNotification","doAssignConsultation","doGetPendingConsultations","confirmMessageService","Button","AssignmentIndIcon","useDispatch","errorHandler","useGlobalStyles","PendingConsultations","classes","history","data","setData","requests","setRequests","columns","name","options","filter","sort","empty","customBodyRenderLite","dataIndex","button","onAssignToMeClicked","filterType","responsive","selectableRows","index","pendingRequest","show","requestId","subscribe","res","showSuccess","push","reloadPendingConsultations","pendingConsultations","buffer","map","item","result","labResult","age","results","heroContent"],"mappings":"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","sourcesContent":["import {Container, Grid, makeStyles, React, useEffect, useHistory, useState,} from \"../component\"\nimport MUIDataTable from \"mui-datatables\";\nimport {appNotification} from \"../shared/notification/app-notification\";\nimport {doAssignConsultation, doGetPendingConsultations} from \"./consultationDispatcher\";\nimport {confirmMessageService} from \"../shared/confirm/confirm-message-service\";\nimport Button from '@material-ui/core/Button';\n\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport {useDispatch} from \"react-redux\";\nimport {errorHandler} from \"../shared/common-helpers\";\nimport {useGlobalStyles} from \"../styles/GlobalStyles\";\n\n\n\nfunction PendingConsultations() {\n\n    const classes = useGlobalStyles();\n    const history = useHistory();\n\n    const [data, setData] = useState([]);\n\n    const [requests, setRequests] = useState([]);\n    const columns = [\n\n        {\n            name: \"Request ID\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: \"Name\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Age\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n\n            name: \"Status\",\n            options: {\n                filter: true,\n            }\n        },\n        {\n            name: 'Actions',\n            options: {\n                filter: false,\n                sort: false,\n                empty: true,\n                customBodyRenderLite: (dataIndex) => {\n\n                    return <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        className={classes.button}\n                        startIcon={<AssignmentIndIcon/>}\n                        onClick={() => {\n                            onAssignToMeClicked(dataIndex)\n                        }}\n                    >\n                        Assign to Me\n                    </Button>\n\n                },\n            }\n        }\n\n    ];\n\n\n    const options = {\n        filter: true,\n        filterType: 'dropdown',\n        responsive: 'standard',\n        selectableRows: 'none',\n\n    };\n\n\n    async function onAssignToMeClicked(index) {\n        const pendingRequest = requests[index]\n\n\n            await confirmMessageService.show(\"Do you want to Assign yourself for Consultaion \" + pendingRequest.name + \"?\")\n\n            doAssignConsultation(pendingRequest.requestId).subscribe((res) => {\n                appNotification.showSuccess(\"Request Assigned to you, Please update your diagnosis details.\")\n\n                history.push(\"/update-consultation/\" + pendingRequest.requestId)\n\n            }, errorHandler);\n\n\n\n\n    }\n\n\n\n    function reloadPendingConsultations() {\n\n        doGetPendingConsultations()\n            .subscribe((pendingConsultations) => {\n\n\n                setRequests(pendingConsultations)\n                const buffer = pendingConsultations.map(item => {\n\n                    const {result} = item.labResult\n                    return [item.requestId, item.name, item.age, result]\n                })\n\n                const results = []\n                results.push(buffer)\n                setData(buffer)\n\n            }, errorHandler)\n    }\n\n\n    useEffect(() => {\n\n\n        reloadPendingConsultations();\n\n\n    }, [])\n\n\n    return (\n        <React.Fragment>\n            <Container maxWidth=\"md\" component=\"main\" className={classes.heroContent}>\n                <h1>\n                    Pending Consultations\n                </h1>\n                <hr/>\n            </Container>\n            <Container component=\"main\" maxWidth=\"md\">\n                <Grid container>\n                    <Grid item md={12}>\n\n                        <MUIDataTable title={\"Pending Consultations\"} data={data} columns={columns} options={options}/>\n\n                    </Grid>\n                </Grid>\n            </Container>\n        </React.Fragment>\n\n    )\n}\n\nexport default PendingConsultations\n"]},"metadata":{},"sourceType":"module"}